{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"lodash\"","webpack:///external \"@grafana/ui\"","webpack:///external \"@grafana/data\"","webpack:///external \"@grafana/runtime\"","webpack:///./instana-grafana.css?07a9","webpack:///./instana-grafana.css","webpack:///../node_modules/css-loader/dist/runtime/api.js","webpack:///../node_modules/style-loader/lib/addStyles.js","webpack:///../node_modules/style-loader/lib/urls.js","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./util/request_handler.ts","webpack:///./util/target_util.ts","webpack:///./GlobalVariables.ts","webpack:///./util/time_util.ts","webpack:///./cache.ts","webpack:///./datasources/DataSource_Slo.ts","webpack:///./lists/metric_categories.ts","webpack:///./util/queryInterval_check.ts","webpack:///./lists/granularities.ts","webpack:///./lists/rollups.ts","webpack:///./util/rollup_granularity_util.ts","webpack:///./lists/max_metrics.ts","webpack:///./datasources/Datasource_Infrastructure.ts","webpack:///./util/delta_util.ts","webpack:///./util/instana_version.ts","webpack:///./util/aggregation_util.ts","webpack:///./util/analyze_util.ts","webpack:///./datasources/DataSource_Website.ts","webpack:///./lists/default_metric_catalog.ts","webpack:///./datasources/DataSource_Application.ts","webpack:///./datasources/DataSource_Service.ts","webpack:///./datasources/DataSource_Endpoint.ts","webpack:///./migration.ts","webpack:///./datasources/DataSource.ts","webpack:///./util/proxy_check.ts","webpack:///./components/ConfigEditor.tsx","webpack:///./components/FormField/FormWrapper.tsx","webpack:///./components/FormField/FormSelect.tsx","webpack:///./components/ApplicationServiceEndpointMetrics/ApplicationServiceEndpointMetrics.tsx","webpack:///./lists/apply_call_to_entities.ts","webpack:///./components/Analyze/ApplicationCallsMetrics.tsx","webpack:///./components/FormField/FormInput.tsx","webpack:///./components/Infrastructure/Custom/MetricFilter.tsx","webpack:///./components/FormField/FormSwitch.tsx","webpack:///./components/Infrastructure/Custom/FreeTextMetrics.tsx","webpack:///./lists/aggregation_function.ts","webpack:///./components/AdvancedSettings/AggregateQuery.tsx","webpack:///./components/AdvancedSettings/AdvancedSettings.tsx","webpack:///./components/Infrastructure/QueryType.tsx","webpack:///./components/Infrastructure/Infrastructure.tsx","webpack:///./lists/slo_specifics.ts","webpack:///./components/SLOInformation/SloInformation.tsx","webpack:///./lists/beacon_types.ts","webpack:///./components/Analyze/WebsiteMetrics.tsx","webpack:///./lists/operators.ts","webpack:///./components/Analyze/Filter.tsx","webpack:///./components/Metric/Metric.tsx","webpack:///./components/QueryEditor.tsx","webpack:///./module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","content","options","transform","undefined","locals","___CSS_LOADER_API_IMPORT___","push","useSourceMap","list","toString","this","map","item","cssMapping","btoa","sourceMapping","sourceMap","base64","unescape","encodeURIComponent","JSON","stringify","data","concat","sourceURLs","sources","source","sourceRoot","join","cssWithMappingToString","mediaQuery","dedupe","alreadyImportedModules","length","id","_i","fn","memo","stylesInDom","isOldIE","window","document","all","atob","apply","arguments","getTarget","target","parent","querySelector","getElement","styleTarget","HTMLIFrameElement","contentDocument","head","e","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","insertInto","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","attrs","type","nonce","getNonce","addAttrs","el","keys","forEach","setAttribute","obj","update","remove","result","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","updateLink","href","applyToTag","newObj","DEBUG","newList","mayRemove","textStore","replaceText","index","replacement","filter","Boolean","styleSheet","cssText","cssNode","createTextNode","childNodes","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","constructor","__assign","assign","__rest","getOwnPropertySymbols","propertyIsEnumerable","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","getRequest","endpoint","swallowError","maxRetries","doRequest","method","url","postRequest","request","useProxy","Authorization","apiToken","datasourceRequest","error","status","console","log","emptyResultData","refId","datapoints","buildTimeSeries","ALL_APPLICATIONS","ALL_ENDPOINTS","readTime","time","from","Math","floor","Date","valueOf","getTime","to","windowSize","getWindowSize","timeFilter","getTimeKey","msToMin","hoursToMs","hours","store","put","ttl","del","expiry","now","timeout","setTimeout","clearTimeout","instanaOptions","sliReportsCache","getConfiguredSLIs","sliReports","response","sliName","runQuery","sloReport","sloSpecific","sloValue","extractSpecificValueFromSLI","sliResult","buildResultArray","sli","errorBudgetRemaining","buildViolationDistributionTimeSeries","violationDistribution","timestamp","series","greens","reds","greys","granularity","isInvalidQueryInterval","queryIntervalLimit","availableFor","rollup","getDefaultChartGranularity","getPossibleGranularities","maxValues","possibleGranularities","granularities","getDefaultMetricRollupDuration","getPossibleRollups","possibleRollups","rollups","rollupDefinition","rollUp","timeToLiveSnapshotInfoCache","snapshotCache","snapshotInfoCache","catalogCache","typeCache","queryinterval_limit_infra","metric","showAllMetrics","freeTextMetrics","fetchSnapshotsForTarget","snapshots","fetchMultipleMetricsForSnapshots","allMetrics","metrics","extractMetricsFromText","fetchMetricsForSnapshots","freeText","metricsString","split","each","metricString","parse","slice","resultPromises","allResults","res","snapshot","fetchMetricsForSnapshot","snapshotId","timeInterval","timeseries","readTimeSeries","values","aggregation","buildLabel","stableHash","displayMaxMetricValue","maxValue","getMaxMetricValue","buildMaxMetricTarget","convertRelativeToAbsolute","maxMetrics","max_metrics","find","resultLabel","maxLabel","convertMetricNameToMaxLabel","datapoint","getEntityTypes","entityTypes","typesResponse","entry","plugin","fetchTypesForTarget","query","fetchSnapshotTypesUrl","entityQuery","showOffline","getMetricsCatalog","metricCategory","catalogResponse","metricId","description","aggregations","entityType","pluginId","buildQuery","buildSnapshotCacheKey","fetchSnapshotContextsUrl","contextsResponse","snapshotInfo","fetchSnapshotUrl","snapshotResponse","reduceSnapshot","compact","includes","pick","correctMeanToSum","secondMultiplier","parseInt","getHostSuffix","labelFormat","timeShift","timeShiftIsValid","omitLabels","versionCache","getVersion","cachedVersion","imageTag","majorVersion","aggregateTarget","targetLabel","customFilters","aggregationFunction","buildAggregationLabel","concatedTargetData","concatTargetData","aggregatedData","dataGroupedByTimestamp","aggregationLabel","timestampData","valuesOfTimestamp","aggregatedValue","toLowerCase","sum","mean","min","max","aggregateDataOfTimestamp","groupBy","buildResult","sortBy","createTagFilter","tagFilter","tag","operator","stringValue","numberValue","booleanValue","readItemMetrics","getLabel","flatten","items","websitesCache","miscCache","queryinterval_limit_website_metrics","group","entity","fetchAnalyzeMetricsForWebsite","buildAnalyzeWebsiteLabel","getWebsites","websites","groupbyTag","timeFrame","order","by","direction","pagination","ingestionTime","offset","retrievalSize","websitesResponse","getWebsiteTags","websiteTags","tagsResponse","getWebsiteMetricsCatalog","websiteCatalog","transformAggregations","sort","beaconTypes","a","tagFilters","filters","isValid","groupbyTagSecondLevelKey","applicationsCache","queryinterval_limit_app_calls","fetchAnalyzeMetricsForApplication","showWarningCantShowAllResults","canLoadMore","buildAnalyzeApplicationLabel","getApplications","applications","paginateApplications","flattenDeep","pageSet","orderBy","application","results","page","pageSize","pageLimit","queryParameters","totalHits","getApplicationTags","applicationTags","canApplyToSource","canApplyToDestination","getApplicationMetricsCatalog","applicationCallToEntity","getTagEntity","selectedEntity","fetchApplicationMetrics","buildApplicationMetricLabel","servicesCache","getServicesOfApplication","applicationId","services","paginateServices","service","fetchServiceMetrics","buildServiceMetricLabel","endpointsCache","getEndpointsOfService","serviceId","endpoints","paginateEndpoints","fetchEndpointMetrics","endpointId","buildEndpointMetricLabel","selectedApplication","cf","metric_categories","category","instanceSettings","jsonData","instanaUrl","availableGranularities","availableRollups","availableTimeIntervals","dataSourceSlo","dataSourceInfrastructure","dataSourceWebsite","dataSourceApplication","dataSourceService","dataSourceEndpoint","resultCache","DataSource","range","targets","pseudoHash","targetTimeFilter","hide","setPossibleTimeIntervals","millis","convertTimeShiftToMillis","applyTimeShiftOnTimeFilter","omit","mapValues","adjustTimeFilterIfCached","buildTargetWithAppendedDataResult","getApplicationServiceEndpointMetrics","targetData","targetAndData","resultData","applyTimeShiftIfNecessary","aggregateDataIfNecessary","cacheResultIfNecessary","queryinterval_limit_app_metrics","applyTimeShiftOnData","supportsDeltaRequests","hasResult","cachedObj","version","timeshift","newData","aggregateGraphs","hideOriginalGraphs","dt","appendResult","newDeltaData","cachedData","cachedResult","deltaData","matchingCachedData","size","sortedUniqBy","takeRight","t1","t2","newFrom","getDeltaRequestTimestamp","newTo","fromDefault","penultimate","getSloReports","fetchApplications","getTimeFilter","fetchServices","fetchEndpoints","fetchWebsites","getDefaultTimeInterval","parseTimeShift","endsWith","testDatasource","message","title","statusText","versions","props","onInstanaOptionsChange","eventItem","onOptionsChange","currentTarget","debouncedDetectFeatures","onSwitchChange","settings","debounce","detectFeatures","setState","canUseProxy","canQueryOfflineSnapshots","state","render","className","horizontal","required","width","placeholder","onChange","event","suffix","theme","allowSlo","FormWrapper","display","disabled","opacity","pointerEvents","stretch","children","tooltip","searchable","queryKeyword","labelWidth","inputWidth","remainingProps","menuPlacement","isSearchable","Component","isUnmounting","onApplicationChange","onRunQuery","loadServices","loadEndpoints","onServiceChange","onEndpointChange","debouncedRunQuery","onGroupByTagSecondLevelKeyChange","componentDidMount","loadApplications","datasource","updateMetrics","componentWillUnmount","apps","unshift","app","showGroupBySecondLevel","onGroupChange","onApplicationCallToEntityChange","onCallToEntityChange","callToEntity","updateGroups","groups","onFilterChange","addCustomFilter","removeCustomFilter","listFilter","variant","onClick","Switch","checked","onUseFreeTextMetricsChange","loadEntityTypes","useFreeTextMetrics","onFreeTextMetricsChange","onAggregateGraphs","onHideOriginalGraph","onAggregationFunctionChange","showAdditionalSettings","legendFormat","legendFormatPlaceholders","legendFormatTooltips","onLegendFormatChange","onTimeShiftChange","match","legendFormatPlaceholder","setLegendFormatPlaceholder","setLegendFormatTooltip","hidden","invalid","onQueryChange","updateQueryTypes","debouncedEntityTypes","onTypeChange","queryTypes","noOptionsMessage","onSloChange","slo","onSloValueChange","onSloSpecificChange","sloReports","isValidSlo","loadSloReports","val","valid","shouldComponentUpdate","nextProps","nextState","nextContext","onWebsiteChange","website","onBeaconTypeChange","filterMetricsOnType","beacon_types","websiteMetrics","OPERATOR_STRING","OPERATOR_NUMBER","OPERATOR_BOOLEAN","OPERATOR_KEY_VALUE","addTagFilter","filterOperatorsOnType","removeTagFilter","validateChangeAndRun","onOperatorChange","onTagFilterStringValueChange","onTagFilterNumberValueChange","valueAsNumber","operators","canShowStringInput","onTagFilterBooleanValueChange","runDebounced","singleFilter","onMetricChange","canShowMaxMetricValue","onTimeIntervalChange","onAggregationChange","onShowMaxValueChange","onShowAllMetricsChange","possibleTimeIntervals","possibleAggregations","canShowAggregation","canSelectAggregation","availableMetrics","canShowAllMetrics","onCategoryChange","newCategory","selectionReset","changeAndRun","onMetricsFilter","setMetricPlaceholder","filterForEntityType","findMatchingEntityTypes","filterResults","filterEntityTypes","types","newAvailableMetrics","applyFilterToMetricList","isAbleToShowAllMetrics","checkMetricAndRefresh","defaultQuery","nrOfTotalResults","filterResult","filteredMetrics","resetMetricSelection","resetEntityTypeSelection","resetEntitySelection","resetServices","resetEndpoints","resetSLO","setConfigEditor","setQueryEditor"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--8-1!../node_modules/postcss-loader/src/index.js??ref--8-2!../node_modules/sass-loader/lib/loader.js!./instana-grafana.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js??ref--8-1!../node_modules/postcss-loader/src/index.js??ref--8-2!../node_modules/sass-loader/lib/loader.js!./instana-grafana.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--8-1!../node_modules/postcss-loader/src/index.js??ref--8-2!../node_modules/sass-loader/lib/loader.js!./instana-grafana.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \"path[d=\\\"M18.71,7.21a1,1,0,0,0-1.42,0L9.84,14.67,6.71,11.53A1,1,0,1,0,5.29,13l3.84,3.84a1,1,0,0,0,1.42,0l8.16-8.16A1,1,0,0,0,18.71,7.21Z\\\"] {\\n  display: none; }\\n\", \"\",{\"version\":3,\"sources\":[\"instana-grafana.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,aAAa,EAAE\",\"file\":\"instana-grafana.css\",\"sourcesContent\":[\"path[d=\\\"M18.71,7.21a1,1,0,0,0-1.42,0L9.84,14.67,6.71,11.53A1,1,0,1,0,5.29,13l3.84,3.84a1,1,0,0,0,1.42,0l8.16-8.16A1,1,0,0,0,18.71,7.21Z\\\"] {\\n  display: none; }\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { getBackendSrv } from '@grafana/runtime';\nimport { BackendSrvRequest } from '@grafana/runtime/services/backendSrv';\nimport { InstanaOptions } from '../types/instana_options';\nimport { DataSourceInstanceSettings } from '@grafana/data';\n\nexport function getRequest(options: InstanaOptions, endpoint: string, swallowError = false, maxRetries = 1): any {\n  const request = {\n    method: 'GET',\n    url: options.url + endpoint,\n  };\n\n  return doRequest(options, request, swallowError, maxRetries);\n}\n\nexport function postRequest(\n  options: InstanaOptions,\n  endpoint: string,\n  data: {},\n  swallowError = false,\n  maxRetries = 0\n): any {\n  const request = {\n    method: 'POST',\n    url: options.url + endpoint,\n    data: data,\n  };\n\n  return doRequest(options, request, swallowError, maxRetries);\n}\n\nfunction doRequest(\n  options: InstanaOptions,\n  request: BackendSrvRequest,\n  swallowError: boolean,\n  maxRetries: number\n): any {\n  if (!options.useProxy) {\n    request['headers'] = {\n      Authorization: 'apiToken ' + options.apiToken,\n    };\n  }\n\n  return getBackendSrv()\n    .datasourceRequest(request)\n    .catch((error) => {\n      if (error.status === 429) {\n        throw new Error('API limit is reached.');\n        return;\n      }\n\n      if (swallowError && (error.status >= 400 || error.status < 500)) {\n        console.log(error);\n        return;\n      }\n      if (maxRetries > 0) {\n        return doRequest(options, request, swallowError, maxRetries - 1);\n      }\n      throw error;\n    });\n}\n\nexport function instanaUrl(instanceSettings: DataSourceInstanceSettings<InstanaOptions>): string {\n  if (instanceSettings.jsonData.useProxy) {\n    return instanceSettings.url + '/instana'; // to match proxy route in plugin.json\n  } else {\n    return instanceSettings.jsonData.url;\n  }\n}\n","import { TimeSeries, TimeSeriesPoints } from '@grafana/data';\n\nexport function emptyResultData(refId: string): TimeSeries {\n  return {\n    target: refId,\n    datapoints: [],\n  };\n}\n\nexport function buildTimeSeries(label: string, refId: string, datapoints: TimeSeriesPoints): TimeSeries {\n  return {\n    target: label,\n    refId: refId,\n    datapoints: datapoints,\n  };\n}\n","/* CONFIG */\nexport const PAGINATION_LIMIT = 15; // pagesize=200 => 3000 results in dropdown (~30sec.)\nexport const CACHE_MAX_AGE = 60000;\nexport const SEPARATOR = '|';\n\n/* CATEGORIES */\nexport const BUILT_IN_METRICS = 0;\nexport const CUSTOM_METRICS = 1;\nexport const ANALYZE_APPLICATION_METRICS = 2;\nexport const ANALYZE_WEBSITE_METRICS = 3;\nexport const APPLICATION_SERVICE_ENDPOINT_METRICS = 4; // replaces previous ->\n// APPLICATION_METRICS = '4';\n// SERVICE_METRICS = '5';\n// ENDPOINT_METRICS = '6';\nexport const SLO_INFORMATION = 7;\n\n/* DROPDOWN DEFAULTS */\nexport const ALL_APPLICATIONS = '-- No Application Filter --';\nexport const ALL_SERVICES = '-- No Service Filter --';\nexport const ALL_ENDPOINTS = '-- No Endpoint Filter --';\n\n/* PLACEHOLDER */\nexport const PLEASE_SPECIFY = 'Please specify';\n","import { TimeRange } from '@grafana/data/types/time';\nimport TimeFilter from '../types/time_filter';\nimport { SEPARATOR } from '../GlobalVariables';\n\nexport function readTime(time: TimeRange): TimeFilter {\n  const from = Math.floor(new Date(time!.from.valueOf()).getTime() / 1000) * 1000;\n  const to = Math.floor(new Date(time!.to.valueOf()).getTime() / 1000) * 1000;\n  return {\n    from: from,\n    to: to,\n    windowSize: to - from,\n  };\n}\n\nexport function getWindowSize(timeFilter: TimeFilter): number {\n  return timeFilter.from ? timeFilter.to - timeFilter.from : timeFilter.windowSize;\n}\n\nexport function getTimeKey(timeFilter: TimeFilter): string {\n  // time might be part of a cache key as this can cause different results\n  return msToMin(timeFilter.from) + SEPARATOR + msToMin(timeFilter.to);\n}\n\nfunction msToMin(time: number): number {\n  return Math.floor(time / 60000);\n}\n\nexport function hoursToMs(hours: any): number {\n  if (hours > 0) {\n    return hours * 60 * 60 * 1000;\n  }\n  return 0;\n}\n","export default class Cache<T> {\n  store: any;\n\n  constructor() {\n    this.store = {};\n  }\n\n  put(key: string, value: T, ttl = 60000): void {\n    if (key === undefined || value === undefined) {\n      return;\n    }\n\n    this.del(key);\n    this.store[key] = {\n      value,\n      expiry: Date.now() + ttl,\n      timeout: setTimeout(() => {\n        this.del(key);\n      }, ttl),\n    };\n  }\n\n  get(key: string): T {\n    var item = this.store[key];\n    if (item && !(item.expiry && item.expiry > Date.now())) {\n      this.del(key);\n      item = undefined;\n    }\n    return item && item.value;\n  }\n\n  del(key: string): void {\n    if (this.store.hasOwnProperty(key)) {\n      clearTimeout(this.store[key].timeout);\n      delete this.store[key];\n    }\n  }\n}\n","import { SelectableValue, TimeSeries, TimeSeriesPoints } from '@grafana/data';\nimport { buildTimeSeries, emptyResultData } from '../util/target_util';\nimport { InstanaOptions } from '../types/instana_options';\nimport { InstanaQuery } from '../types/instana_query';\nimport { getRequest } from '../util/request_handler';\nimport { getWindowSize } from '../util/time_util';\nimport TimeFilter from '../types/time_filter';\nimport Cache from '../cache';\nimport _ from 'lodash';\n\nexport class DataSourceSlo {\n  sliReportsCache: Cache<Promise<SelectableValue[]>>;\n  instanaOptions: InstanaOptions;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.sliReportsCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  getConfiguredSLIs(): Promise<SelectableValue[]> {\n    let sliReports = this.sliReportsCache.get('sliReports');\n    if (sliReports) {\n      return sliReports;\n    }\n\n    sliReports = getRequest(this.instanaOptions, '/api/settings/sli').then((response: any) =>\n      _.map(response.data, (r) => {\n        return {\n          key: r.id,\n          label: r.sliName,\n        };\n      })\n    );\n\n    this.sliReportsCache.put('sliReports', sliReports);\n    return sliReports;\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter) {\n    //avoid involid calls\n    if (\n      !target ||\n      !target.sloReport ||\n      !target.sloReport.key ||\n      !target.sloSpecific ||\n      !target.sloSpecific.key ||\n      !target.sloValue\n    ) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    let endpoint =\n      '/api/sli/report/' +\n      target.sloReport.key +\n      '?from=' +\n      timeFilter.from +\n      '&to=' +\n      timeFilter.to +\n      '&slo=' +\n      target.sloValue;\n    return getRequest(this.instanaOptions, endpoint).then((response: any) => {\n      return this.extractSpecificValueFromSLI(target, response.data, timeFilter);\n    });\n  }\n\n  extractSpecificValueFromSLI(target: InstanaQuery, sliResult: any, timeFilter: TimeFilter) {\n    if (target.sloSpecific.key === 'SLI') {\n      return [\n        buildTimeSeries(target.sloSpecific.label!, target.refId, this.buildResultArray(sliResult.sli, timeFilter.to)),\n      ];\n    } else if (target.sloSpecific.key === 'Remaining Error Budget') {\n      return [\n        buildTimeSeries(\n          target.sloSpecific.label!,\n          target.refId,\n          this.buildResultArray(sliResult.errorBudgetRemaining, timeFilter.to)\n        ),\n      ];\n    } else if (target.sloSpecific.key === 'Timeseries') {\n      return this.buildViolationDistributionTimeSeries(target, sliResult.violationDistribution, timeFilter);\n    }\n\n    return [emptyResultData(target.refId)];\n  }\n\n  buildResultArray(result: number, timestamp: number): TimeSeriesPoints {\n    return [[result, timestamp]];\n  }\n\n  buildViolationDistributionTimeSeries(target: InstanaQuery, series: any, timeFilter: TimeFilter): TimeSeries[] {\n    const greens: any[] = [];\n    const reds: any[] = [];\n    const greys: any[] = [];\n\n    let granularity = getWindowSize(timeFilter) / Object.keys(series).length;\n    _.forEach(series, (value: number, index: number) => {\n      if (value === 1) {\n        greens.push([1, timeFilter.from + index * granularity]);\n      } else if (value === 0) {\n        greys.push([1, timeFilter.from + index * granularity]);\n      } else if (value === -1) {\n        reds.push([1, timeFilter.from + index * granularity]);\n      }\n    });\n\n    const result: TimeSeries[] = [];\n    result.push(buildTimeSeries('No violation', target.refId, greens));\n    result.push(buildTimeSeries('Violation', target.refId, reds));\n    result.push(buildTimeSeries('No data', target.refId, greys));\n\n    return result;\n  }\n}\n","/**\n * Do not remove the commented stuff.\n */\nexport default [\n  {\n    label: 'Infrastructure built-in metrics',\n    key: 0,\n  },\n  {\n    label: 'Infrastructure custom metrics',\n    key: 1,\n  },\n  {\n    // replaces Application metrics(4) & Service metrics(5) & Endpoint metrics(6)\n    label: 'Application/service/endpoint metrics',\n    key: 4,\n  },\n  {\n    label: 'Analyze application calls',\n    key: 2,\n  },\n  {\n    label: 'Analyze website',\n    key: 3,\n  },\n  {\n    label: 'SLO information',\n    key: 7,\n  },\n];\n","/**\n * Util method to validate query intervals which are too big.\n *\n * @param windowSize in ms\n * @param queryIntervalLimit in ms\n */\nexport function isInvalidQueryInterval(windowSize: number, queryIntervalLimit?: number): boolean {\n  if (queryIntervalLimit) {\n    if (queryIntervalLimit > 0) {\n      return Math.floor(windowSize / 1000) * 1000 > queryIntervalLimit;\n    }\n    return false;\n  }\n\n  return false;\n}\n","export default [\n  {\n    value: 1, // 1s\n    label: '1s',\n  },\n  {\n    value: 5, // 5s\n    label: '5s',\n  },\n  {\n    value: 10, // 10s\n    label: '10s',\n  },\n  {\n    value: 60, // 1m\n    label: '1min',\n  },\n  {\n    value: 60 * 5, // 5m\n    label: '5min',\n  },\n  {\n    value: 60 * 10, // 10m\n    label: '10min',\n  },\n  {\n    value: 60 * 60, // 1h\n    label: '1h',\n  },\n  {\n    value: 60 * 60 * 5, // 5h\n    label: '5h',\n  },\n  {\n    value: 60 * 60 * 10, // 10h\n    label: '10h',\n  },\n  {\n    value: 60 * 60 * 24, // 1d\n    label: '1d',\n  },\n  {\n    value: 60 * 60 * 24 * 5, // 5d\n    label: '5d',\n  },\n  {\n    value: 60 * 60 * 24 * 10, // 10d\n    label: '10d',\n  },\n];\n","export default [\n  {\n    availableFor: 1000 * 60 * 60 * 24, // 1d\n    rollup: 1000, // 1s\n    label: '1s',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24, // 1d\n    rollup: 1000 * 5, // 5s\n    label: '5s',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24 * 31, // 1 month\n    rollup: 1000 * 60, // 1m\n    label: '1min',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24 * 31 * 3, // 3 months\n    rollup: 1000 * 60 * 5, // 5m\n    label: '5min',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24 * 31 * 12, // 1 year aka forever\n    rollup: 1000 * 60 * 60, // 1h\n    label: '1h',\n  },\n];\n","import granularities from '../lists/granularities';\nimport TimeFilter from '../types/time_filter';\nimport rollups from '../lists/rollups';\nimport Selectable from '../types/selectable';\n\nconst MAX_DATAPOINTS_ANALYZE = 600;\nconst MAX_DATAPOINTS_INFRASTRUCTURE = 800;\nconst UI_DATAPOINTS_ANALYZE = 80;\n\nfunction currentTime() {\n  return Date.now();\n}\n\nfunction getWindowSize(timeFilter: TimeFilter): number {\n  return timeFilter.from ? timeFilter.to - timeFilter.from : timeFilter.windowSize;\n}\n\nexport function getDefaultChartGranularity(windowSize: number): Selectable {\n  return getPossibleGranularities(windowSize, UI_DATAPOINTS_ANALYZE)[0];\n}\n\nexport function getPossibleGranularities(windowSize: number, maxValues = MAX_DATAPOINTS_ANALYZE): Selectable[] {\n  let possibleGranularities = granularities.filter(\n    (granularity) => windowSize / 1000 / granularity.value <= maxValues && granularity.value * 1000 <= windowSize\n  );\n\n  // window sizes of this length and up have a granularity of at least 1h\n  if (windowSize > 48000001) {\n    possibleGranularities = possibleGranularities.filter((granularity) => granularity.value >= 3600);\n  }\n\n  if (windowSize >= 1800000) {\n    possibleGranularities = possibleGranularities.filter((granularity) => granularity.value >= 60);\n  }\n\n  if (possibleGranularities.length > 0) {\n    return possibleGranularities.map((granularity) => ({\n      key: granularity.value.toString(),\n      label: granularity.label,\n    }));\n  }\n\n  return [\n    {\n      key: granularities[granularities.length - 1].value.toString(),\n      label: granularities[granularities.length - 1].label,\n    },\n  ];\n}\n\nexport function getDefaultMetricRollupDuration(timeFilter: TimeFilter): Selectable {\n  return getPossibleRollups(timeFilter)[0];\n}\n\nexport function getPossibleRollups(timeFilter: TimeFilter): Selectable[] {\n  // Ignoring time differences for now since small time differences\n  // can be accepted. This time is only used to calculate the rollup.\n  const now = currentTime();\n  const windowSize = getWindowSize(timeFilter);\n\n  let possibleRollups = rollups\n    .filter((rollupDefinition) => timeFilter.from >= now - rollupDefinition.availableFor)\n    .filter((rollUp) => windowSize >= rollUp.rollup && windowSize / rollUp.rollup <= MAX_DATAPOINTS_INFRASTRUCTURE);\n\n  if (possibleRollups.length > 0) {\n    return possibleRollups.map((rollup) => ({\n      key: rollup.rollup.toString(),\n      label: rollup.label,\n    }));\n  }\n\n  return [\n    {\n      key: rollups[rollups.length - 1].rollup.toString(),\n      label: rollups[rollups.length - 1].label,\n    },\n  ];\n}\n","export default [\n  {\n    key: 'cpu.used', // metric.key\n    value: 'cpu.count', // value of the metric found in GET /snapshots/{snapshotId}\n    label: 'cpu.max', // label that shall be shown as target in graph\n  },\n  {\n    key: 'memory.used',\n    value: 'memory.total',\n    label: 'memory.max',\n  },\n  {\n    key: 'openFiles.used',\n    value: 'openFiles.max',\n    label: 'openFiles.max',\n  },\n];\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport { InstanaQuery } from '../types/instana_query';\nimport { getRequest } from '../util/request_handler';\nimport TimeFilter from '../types/time_filter';\nimport Cache from '../cache';\nimport { CUSTOM_METRICS, SEPARATOR } from '../GlobalVariables';\nimport _ from 'lodash';\nimport { getTimeKey, hoursToMs } from '../util/time_util';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\nimport { emptyResultData } from '../util/target_util';\nimport { getDefaultMetricRollupDuration } from '../util/rollup_granularity_util';\nimport max_metrics from '../lists/max_metrics';\n\nexport class DataSourceInfrastructure {\n  instanaOptions: InstanaOptions;\n  snapshotCache: Cache<Promise<SelectableValue[]>>;\n  snapshotInfoCache: Cache<Promise<SelectableValue[]>>;\n  catalogCache: Cache<Promise<SelectableValue[]>>;\n  typeCache: Cache<Promise<SelectableValue[]>>;\n  timeToLiveSnapshotInfoCache: number = 60 * 60 * 1000;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.snapshotCache = new Cache<Promise<SelectableValue[]>>();\n    this.snapshotInfoCache = new Cache<Promise<SelectableValue[]>>();\n    this.catalogCache = new Cache<Promise<SelectableValue[]>>();\n    this.typeCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter) {\n    // do not try to execute to big queries\n    if (isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.instanaOptions.queryinterval_limit_infra))) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.instanaOptions.queryinterval_limit_infra +\n          ' hours'\n      );\n    }\n\n    // do not try to retrieve data without selected metric\n    if ((!target.metric || !target.metric.key) && !target.showAllMetrics && !target.freeTextMetrics) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    // for every target, fetch snapshots in the selected timeframe that satisfy the lucene query.\n    return this.fetchSnapshotsForTarget(target, timeFilter).then((snapshots) => {\n      if (target.showAllMetrics) {\n        // only available for custom metrics\n        return this.fetchMultipleMetricsForSnapshots(target, snapshots, timeFilter, target.allMetrics);\n      } else if (target.freeTextMetrics) {\n        // only available for custom metrics\n        const metrics = this.extractMetricsFromText(target.freeTextMetrics);\n        return this.fetchMultipleMetricsForSnapshots(target, snapshots, timeFilter, metrics);\n      } else {\n        return this.fetchMetricsForSnapshots(target, snapshots, timeFilter, target.metric);\n      }\n    });\n  }\n\n  extractMetricsFromText(freeText: string): string[] {\n    const metricsString = freeText.replace(/\\s/g, '').split(',');\n    let metrics: string[] = [];\n    _.each(metricsString, (metricString) => metrics.push(JSON.parse('{ \"key\": \"' + metricString + '\"}')));\n\n    if (metrics.length > 4) {\n      metrics = metrics.slice(0, 4); // API supports up to 4 metrics at once\n    }\n\n    return metrics;\n  }\n\n  fetchMultipleMetricsForSnapshots(target: InstanaQuery, snapshots: any, timeFilter: TimeFilter, metrics: any) {\n    const resultPromises: any = [];\n    _.forEach(metrics, (metric) => {\n      resultPromises.push(this.fetchMetricsForSnapshots(target, snapshots, timeFilter, metric));\n    });\n\n    return Promise.all(resultPromises).then((allResults) => {\n      const allMetrics: any = [];\n      allResults.forEach((result: any) => result.forEach((s: any) => allMetrics.push(s)));\n      return allMetrics;\n    });\n  }\n\n  fetchMetricsForSnapshots(target: InstanaQuery, snapshots: any, timeFilter: TimeFilter, metric: any) {\n    let maxValues: any = [];\n    let res = _.map(snapshots, (snapshot, index) => {\n      // ...fetch the metric data for every snapshot in the results.\n      return this.fetchMetricsForSnapshot(snapshot.snapshotId, timeFilter, target.timeInterval.key, metric).then(\n        (response: any) => {\n          let timeseries = this.readTimeSeries(response.data.values, target.aggregation, timeFilter);\n          let result = {\n            target: this.buildLabel(snapshot.response, snapshot.host, target, index, metric),\n            datapoints: _.map(timeseries, (value) => [value.value, value.timestamp]),\n            refId: target.refId,\n            key: target.stableHash,\n          };\n\n          if (target.displayMaxMetricValue) {\n            const maxValue = this.getMaxMetricValue(target.metric, snapshot);\n            maxValues.push(this.buildMaxMetricTarget(target, timeseries, maxValue, result.target));\n            result.datapoints = this.convertRelativeToAbsolute(result.datapoints, maxValue);\n          }\n\n          return result;\n        }\n      );\n    });\n\n    return Promise.all(res).then((allResults) => {\n      if (target.displayMaxMetricValue) {\n        allResults = _.concat(res, maxValues);\n      }\n      return Promise.all(allResults);\n    });\n  }\n\n  getMaxMetricValue(metric: any, snapshot: any): number {\n    const maxMetrics: any = max_metrics;\n    return snapshot.response.data.data[_.find(maxMetrics, (m: any) => m.key === metric.key).value];\n  }\n\n  buildMaxMetricTarget(target: any, timeseries: any, maxValue: any, resultLabel: any) {\n    let datapoints = _.map(timeseries, (series) => {\n      return [maxValue, series.timestamp];\n    });\n\n    let maxLabel = this.convertMetricNameToMaxLabel(target.metric);\n\n    return {\n      target: resultLabel + ' ' + maxLabel,\n      datapoints: datapoints,\n      refId: target.refId,\n      key: target.stableHash + maxLabel,\n    };\n  }\n\n  convertMetricNameToMaxLabel(metric: any): string {\n    const maxMetrics: any = max_metrics;\n    return _.find(maxMetrics, (m) => m.key === metric.key).label;\n  }\n\n  convertRelativeToAbsolute(datapoints: any, maxValue: any) {\n    return _.map(datapoints, (datapoint) => {\n      if (datapoint[0]) {\n        return [datapoint[0] * maxValue, datapoint[1]];\n      }\n      return [null, datapoint[1]];\n    });\n  }\n\n  getEntityTypes(): Promise<SelectableValue[]> {\n    let entityTypes = this.typeCache.get('entityTypes');\n    if (entityTypes) {\n      return entityTypes;\n    }\n\n    entityTypes = getRequest(this.instanaOptions, '/api/infrastructure-monitoring/catalog/plugins').then(\n      (typesResponse: any) =>\n        typesResponse.data.map((entry: any) => ({\n          key: entry.plugin,\n          label: entry.label,\n        }))\n    );\n\n    this.typeCache.put('entityTypes', entityTypes);\n\n    return entityTypes;\n  }\n\n  fetchTypesForTarget(query: InstanaQuery, timeFilter: TimeFilter): any {\n    const fetchSnapshotTypesUrl =\n      `/api/snapshots/types` +\n      `?q=${encodeURIComponent(query.entityQuery)}` +\n      `&from=${timeFilter.from}` +\n      `&to=${timeFilter.to}` +\n      (this.instanaOptions.showOffline ? `` : `&time=${timeFilter.to}`);\n    return getRequest(this.instanaOptions, fetchSnapshotTypesUrl);\n  }\n\n  getMetricsCatalog(plugin: SelectableValue, metricCategory: number): Promise<SelectableValue[]> {\n    const key = plugin.key + '|' + metricCategory;\n\n    let metrics = this.catalogCache.get(key);\n    if (metrics) {\n      return metrics;\n    }\n\n    const filter = metricCategory === CUSTOM_METRICS ? 'custom' : 'builtin';\n    metrics = getRequest(\n      this.instanaOptions,\n      `/api/infrastructure-monitoring/catalog/metrics/${plugin.key}?filter=${filter}`\n    ).then((catalogResponse: any) =>\n      catalogResponse.data.map((entry: any) => ({\n        key: entry.metricId,\n        label: entry.label,\n        description: entry.metricId,\n        aggregations: [\n          { key: 'MEAN', label: 'MEAN' },\n          { key: 'SUM', label: 'SUM' },\n        ],\n        entityType: entry.pluginId,\n      }))\n    );\n\n    this.catalogCache.put(key, metrics);\n\n    return metrics;\n  }\n\n  fetchSnapshotsForTarget(target: InstanaQuery, timeFilter: TimeFilter) {\n    const query = this.buildQuery(target);\n    const key = this.buildSnapshotCacheKey(query, timeFilter);\n\n    let snapshots = this.snapshotCache.get(key);\n    if (snapshots) {\n      return snapshots;\n    }\n\n    const fetchSnapshotContextsUrl =\n      `/api/snapshots/context` +\n      `?q=${query}` +\n      `&from=${timeFilter.from}` +\n      `&to=${timeFilter.to}` +\n      (this.instanaOptions.showOffline ? `` : `&time=${timeFilter.to}&size=100`);\n\n    snapshots = getRequest(this.instanaOptions, fetchSnapshotContextsUrl)\n      .then((contextsResponse: any) => {\n        return Promise.all(\n          contextsResponse.data.map(({ snapshotId, host }: any) => {\n            let snapshotInfo = this.snapshotInfoCache.get(snapshotId);\n            if (snapshotInfo) {\n              return snapshotInfo;\n            }\n\n            const fetchSnapshotUrl =\n              `/api/snapshots/${snapshotId}` +\n              (this.instanaOptions.showOffline\n                ? `?from=${timeFilter.from}&to=${timeFilter.to}`\n                : `?time=${timeFilter.to}`); // @see SnapshotApiResource#getSnapshot\n\n            snapshotInfo = getRequest(this.instanaOptions, fetchSnapshotUrl, true).then((snapshotResponse: any) => {\n              // check for undefined because the fetchSnapshotContexts is buggy\n              if (snapshotResponse !== undefined) {\n                return {\n                  snapshotId,\n                  host,\n                  response: this.reduceSnapshot(snapshotResponse),\n                };\n              }\n\n              return null;\n            });\n\n            this.snapshotInfoCache.put(snapshotId, snapshotInfo, this.timeToLiveSnapshotInfoCache);\n            return snapshotInfo;\n          })\n        );\n      })\n      .then((response: any) => {\n        // undefined items need to be removed, because the fetchSnapshotContexts is buggy in the backend, maybe can be removed in the future\n        return _.compact(response);\n      });\n\n    this.snapshotCache.put(key, snapshots);\n    return snapshots;\n  }\n\n  buildQuery(target: InstanaQuery): string {\n    // check for entity.pluginId or entity.selfType, because otherwise the backend has a problem with `AND entity.pluginId`\n    if (`${target.entityQuery}`.includes('entity.pluginId:') || `${target.entityQuery}`.includes('entity.selfType:')) {\n      return encodeURIComponent(`${target.entityQuery}`);\n    } else {\n      return encodeURIComponent(`${target.entityQuery} AND entity.pluginId:${target.entityType.key}`);\n    }\n  }\n\n  buildSnapshotCacheKey(query: string, timeFilter: TimeFilter): string {\n    return query + SEPARATOR + getTimeKey(timeFilter);\n  }\n\n  reduceSnapshot(snapshotResponse: any) {\n    // reduce data to used label formatting values\n    snapshotResponse.data = _.pick(snapshotResponse.data, ['id', 'label', 'plugin', 'data']);\n    return snapshotResponse;\n  }\n\n  readTimeSeries(values: any, aggregation: SelectableValue, timeFilter: TimeFilter) {\n    if (aggregation && aggregation.key === 'SUM') {\n      return this.correctMeanToSum(values, timeFilter);\n    }\n    return values;\n  }\n\n  correctMeanToSum(values: any, timeFilter: TimeFilter) {\n    const secondMultiplier = parseInt(getDefaultMetricRollupDuration(timeFilter).key, 10) / 1000;\n    return _.map(values, (value) => {\n      return {\n        value: value.value ? value.value * secondMultiplier : null,\n        timestamp: value.timestamp,\n      };\n    });\n  }\n\n  fetchMetricsForSnapshot(snapshotId: string, timeFilter: TimeFilter, rollup: number, metric: any) {\n    let url =\n      `/api/metrics?metric=${metric.key}` +\n      `&from=${timeFilter.from}` +\n      `&to=${timeFilter.to}` +\n      `&rollup=${rollup}` +\n      `&fillTimeSeries=true` +\n      `&snapshotId=${snapshotId}`;\n    return getRequest(this.instanaOptions, url);\n  }\n\n  getHostSuffix(host: string): string {\n    if (host) {\n      return ' (on host \"' + host + '\")';\n    }\n    return '';\n  }\n\n  buildLabel(snapshotResponse: any, host: any, target: InstanaQuery, index: any, metric: any): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', snapshotResponse.data.label);\n      label = _.replace(label, '$plugin', snapshotResponse.data.plugin); // not documented\n      label = _.replace(label, '$snapshot', snapshotResponse.data.id); // not documented\n      label = _.replace(label, '$host', host ? host : 'unknown');\n      label = _.replace(label, '$pid', _.get(snapshotResponse.data, ['data', 'pid'], ''));\n      label = _.replace(label, '$type', _.get(snapshotResponse.data, ['data', 'type'], ''));\n      label = _.replace(label, '$name', _.get(snapshotResponse.data, ['data', 'name'], ''));\n      label = _.replace(label, '$service', _.get(snapshotResponse.data, ['data', 'service_name'], ''));\n      if (target.freeTextMetrics) {\n        label = _.replace(label, '$metric', metric.key);\n      } else {\n        label = _.replace(label, '$metric', _.get(target, ['metric', 'key'], 'n/a'));\n      }\n      label = _.replace(label, '$index', index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n    return target.timeShift && target.timeShiftIsValid\n      ? snapshotResponse.data.label + this.getHostSuffix(host) + ' - ' + target.timeShift\n      : snapshotResponse.data.label + this.getHostSuffix(host);\n  }\n}\n","import _ from 'lodash';\n\nimport TimeFilter from '../types/time_filter';\n\nconst omitLabels = [\n  'refId',\n  'pluginId',\n  'showWarningCantShowAllResults',\n  'labelFormat',\n  'timeShiftIsValid',\n  'useFreeTextMetrics',\n  'showGroupBySecondLevel',\n  'canShowAllMetrics',\n  'timeFilter',\n  'stableHash',\n];\n\nexport function generateStableHash(obj: any): string {\n  let pseudoHash = _.omit(obj, omitLabels);\n  pseudoHash = _.mapValues(pseudoHash, (value: any) => {\n    // to reduce overhead of interface Selectable\n    if (value != null && typeof value === 'object' && 'key' in value) {\n      value = value.key;\n    }\n\n    return value;\n  });\n  return JSON.stringify(pseudoHash);\n}\n\n/*\n  Check if two time filters are overlapping.\n  Return true when:\n  from |-------------------| to (t2)\n              from |--------------------| to (t1)\n  Returns false when:\n     from |-------------------| to (t2)\nfrom |----------------------------------------| to (t1)\n  from |-------------------| to (t2)\n                        from |-------------------| to (t1)\n*/\nexport function hasIntersection(t1: TimeFilter, t2: TimeFilter): boolean {\n  return t1.from < t2.to && t1.from > t2.from; // t1.windowSize === t2.windowSize\n}\n\n/*\n  Appends new found items to already existing data in cache.\n  Also removes old data accordingly (e.g. if 4 new datapoints were added,\n  the corresponding oldest four datapoints are removed).\n*/\nexport function appendData(newDeltaData: any, cachedData: any): any {\n  _.each(newDeltaData, (deltaData) => {\n    let matchingCachedData = _.find(cachedData, (o) => o.key === deltaData.key);\n    if (matchingCachedData && deltaData.datapoints) {\n      const size = matchingCachedData.datapoints.length;\n      let datapoints = deltaData.datapoints.concat(matchingCachedData.datapoints);\n      datapoints = _.sortedUniqBy(\n        datapoints.sort((a: any, b: any) => a[1] - b[1]),\n        (a: any) => a[1]\n      );\n      matchingCachedData.datapoints = _.takeRight(datapoints, size);\n      matchingCachedData.target = deltaData.target;\n    } else {\n      cachedData.push(deltaData);\n    }\n  });\n  return cachedData;\n}\n","import Cache from '../cache';\nimport { getRequest } from './request_handler';\nimport { InstanaOptions } from '../types/instana_options';\n\nconst versionCache: Cache<number> = new Cache<number>();\n\n/*\n  Get version of current Instana backend and cache it for 10 minutes.\n  This should be the ONLY way to retrieve any information about the Instana backend version.\n */\nexport default function getVersion(options: InstanaOptions) {\n  let cachedVersion = versionCache.get('version');\n  if (cachedVersion) {\n    return Promise.resolve(cachedVersion);\n  }\n\n  return getRequest(options, '/api/instana/version').then(\n    (result: any) => {\n      if (result.data && result.data.imageTag) {\n        const majorVersion = parseInt(result.data.imageTag.split('.', 2)[1], 10) || null;\n        if (majorVersion) {\n          versionCache.put(options.url, majorVersion, 600000);\n        }\n        return majorVersion;\n      }\n      return null;\n    },\n    (error: any) => {\n      return null;\n    }\n  );\n}\n","import _ from 'lodash';\nimport { InstanaQuery } from '../types/instana_query';\n\nexport function aggregateTarget(data: any, target: InstanaQuery) {\n  const targetLabel = buildAggregationLabel(target);\n  data = _.filter(data, (d) => d.target !== targetLabel); // filter out any previously calculated aggregations\n  let concatedTargetData = concatTargetData(data);\n\n  let dataGroupedByTimestamp = _.groupBy(concatedTargetData, function (d) {\n    return d[1];\n  });\n\n  let aggregatedData = aggregateDataOfTimestamp(dataGroupedByTimestamp, target.aggregationFunction.label!);\n  aggregatedData = _.sortBy(aggregatedData, [\n    function (datapoint) {\n      return datapoint[1];\n    },\n  ]);\n\n  return buildResult(aggregatedData, target.refId, targetLabel);\n}\n\nfunction concatTargetData(data: any) {\n  let result: any = [];\n  _.each(data, (entry) => {\n    result = _.concat(result, entry.datapoints);\n  });\n  return result;\n}\n\nfunction aggregateDataOfTimestamp(dataGroupedByTimestamp: any, aggregationLabel: string) {\n  let result: any = [];\n  _.each(dataGroupedByTimestamp, (timestampData, timestamp) => {\n    let valuesOfTimestamp = _.map(timestampData, (datapoint) => {\n      return datapoint[0];\n    });\n    let aggregatedValue = aggregate(aggregationLabel, valuesOfTimestamp);\n    result.push([aggregatedValue, parseInt(timestamp, 10)]);\n  });\n  return result;\n}\n\nfunction aggregate(aggregation: string, data: any) {\n  if (aggregation.toLowerCase() === 'sum') {\n    return _.sum(data);\n  } else if (aggregation.toLowerCase() === 'mean') {\n    return _.mean(data);\n  } else if (aggregation.toLowerCase() === 'min') {\n    return _.min(data);\n  } else if (aggregation.toLowerCase() === 'max') {\n    return _.max(data);\n  } else {\n    //apply not aggregation\n    return data;\n  }\n}\n\nfunction buildResult(aggregatedData: any, refId: string, target: string) {\n  return {\n    datapoints: aggregatedData,\n    refId: refId,\n    target: target,\n  };\n}\n\nfunction buildAggregationLabel(target: InstanaQuery): string {\n  if (target.showAllMetrics) {\n    if (target.allMetrics.length > 1) {\n      if (target.customFilters && target.customFilters.length > 0) {\n        let label = '';\n        _.each(target.customFilters, (filter, index) => {\n          label += filter;\n          if (index !== target.customFilters.length - 1) {\n            label += '.';\n          }\n        });\n        label = label + ' (' + target.aggregationFunction.label + ')';\n        return label;\n      } else {\n        return target.aggregationFunction.label!;\n      }\n    } else {\n      return target.allMetrics[0].key + ' (' + target.aggregationFunction.label + ')';\n    }\n  } else {\n    return target.metric.key + ' (' + target.aggregationFunction.label + ')';\n  }\n}\n","import TagFilter from '../types/tag_filter';\nimport _ from 'lodash';\nimport { InstanaQuery } from '../types/instana_query';\n\nexport function createTagFilter(filter: TagFilter) {\n  let tagFilter = {\n    name: filter.tag.key,\n    operator: filter.operator.key,\n    value: filter.stringValue,\n  };\n\n  if ('NUMBER' === filter.tag.type) {\n    if (filter.numberValue !== null) {\n      tagFilter.value = filter.numberValue.toString();\n    }\n  } else if ('BOOLEAN' === filter.tag.type) {\n    tagFilter.value = filter.booleanValue.toString();\n  }\n\n  return tagFilter;\n}\n\nexport function readItemMetrics(target: InstanaQuery, response: any, getLabel: any) {\n  if (!response.data) {\n    return response;\n  }\n\n  // as we map two times we need to flatten the result\n  return _.flatten(\n    response.data.items.map((item: any, index: number) => {\n      return _.map(item.metrics, (value, key) => {\n        return {\n          target: getLabel(target, item, key, index),\n          datapoints: _.map(value, (metric) => [metric[1], metric[0]]),\n          refId: target.refId,\n          key: target.stableHash,\n        };\n      });\n    })\n  );\n}\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize, hoursToMs } from '../util/time_util';\nimport BeaconGroupBody from '../types/beacon_group_body';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\nimport { InstanaQuery } from '../types/instana_query';\nimport { createTagFilter, readItemMetrics } from '../util/analyze_util';\nimport { emptyResultData } from '../util/target_util';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\n\nexport class DataSourceWebsite {\n  instanaOptions: InstanaOptions;\n  websitesCache: Cache<Promise<SelectableValue[]>>;\n  miscCache: Cache<any>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.websitesCache = new Cache<Promise<SelectableValue[]>>();\n    this.miscCache = new Cache<any>();\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter) {\n    if (\n      isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.instanaOptions.queryinterval_limit_website_metrics))\n    ) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.instanaOptions.queryinterval_limit_website_metrics +\n          ' hours'\n      );\n    }\n\n    // avoid invalid calls\n    if (\n      !target ||\n      !target.metric ||\n      !target.metric.key ||\n      !target.group ||\n      !target.group.key ||\n      !target.entity ||\n      !target.entity.key\n    ) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    return this.fetchAnalyzeMetricsForWebsite(target, timeFilter).then((response: any) => {\n      return readItemMetrics(target, response, this.buildAnalyzeWebsiteLabel);\n    });\n  }\n\n  getWebsites(timeFilter: TimeFilter) {\n    const key = getTimeKey(timeFilter);\n\n    let websites = this.websitesCache.get(key);\n    if (websites) {\n      return websites;\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    const data: BeaconGroupBody = {\n      group: {\n        groupbyTag: 'beacon.website.name',\n      },\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      type: 'PAGELOAD',\n      metrics: [\n        {\n          metric: 'pageLoads',\n          aggregation: 'SUM',\n        },\n      ],\n      order: {\n        by: 'pageLoads',\n        direction: 'desc',\n      },\n      pagination: {\n        ingestionTime: 0,\n        offset: 0,\n        retrievalSize: 200,\n      },\n    };\n    websites = postRequest(this.instanaOptions, '/api/website-monitoring/analyze/beacon-groups', data).then(\n      (websitesResponse: any) =>\n        websitesResponse.data.items.map((entry: any) => ({\n          key: entry.name,\n          label: entry.name,\n        }))\n    );\n    this.websitesCache.put(key, websites);\n\n    return websites;\n  }\n\n  getWebsiteTags() {\n    let websiteTags = this.miscCache.get('websiteTags');\n    if (websiteTags) {\n      return websiteTags;\n    }\n\n    websiteTags = getRequest(this.instanaOptions, '/api/website-monitoring/catalog/tags').then((tagsResponse: any) =>\n      tagsResponse.data.map((entry: any) => ({\n        key: entry.name,\n        label: entry.name,\n        type: entry.type,\n      }))\n    );\n    this.miscCache.put('websiteTags', websiteTags);\n\n    return websiteTags;\n  }\n\n  getWebsiteMetricsCatalog() {\n    let websiteCatalog = this.miscCache.get('websiteCatalog');\n    if (websiteCatalog) {\n      return websiteCatalog;\n    }\n\n    websiteCatalog = getRequest(this.instanaOptions, '/api/website-monitoring/catalog/metrics').then(\n      (catalogResponse: any) =>\n        catalogResponse.data.map((entry: any) => ({\n          key: entry.metricId,\n          label: entry.label,\n          aggregations: entry.aggregations ? this.transformAggregations(entry.aggregations.sort()) : [],\n          beaconTypes: entry.beaconTypes\n            ? entry.beaconTypes\n            : ['pageLoad', 'resourceLoad', 'httpRequest', 'error', 'custom', 'pageChange'],\n        }))\n    );\n    this.miscCache.put('websiteCatalog', websiteCatalog);\n\n    return websiteCatalog;\n  }\n\n  transformAggregations(aggregations: string[]) {\n    return _.map(aggregations, (a) => {\n      return {\n        key: a,\n        label: a,\n      };\n    });\n  }\n\n  private fetchAnalyzeMetricsForWebsite(target: InstanaQuery, timeFilter: TimeFilter) {\n    const windowSize = getWindowSize(timeFilter);\n    const tagFilters = [\n      {\n        name: 'beacon.website.name',\n        operator: 'EQUALS',\n        value: target.entity.key,\n      },\n    ];\n\n    _.forEach(target.filters, (filter) => {\n      if (filter.isValid) {\n        tagFilters.push(createTagFilter(filter));\n      }\n    });\n    const metric: any = {\n      metric: target.metric.key,\n      aggregation: target.aggregation.key ? target.aggregation.key : 'SUM',\n    };\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n    metric['granularity'] = target.timeInterval.key;\n\n    const group: any = {\n      groupbyTag: target.group.key,\n    };\n    if (target.group.type === 'KEY_VALUE_PAIR' && target.groupbyTagSecondLevelKey) {\n      group['groupbyTagSecondLevelKey'] = target.groupbyTagSecondLevelKey;\n    }\n\n    const data: BeaconGroupBody = {\n      group: group,\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      tagFilters: tagFilters,\n      type: target.entityType.key,\n      metrics: [metric],\n    };\n    return postRequest(this.instanaOptions, '/api/website-monitoring/analyze/beacon-groups?fillTimeSeries=true', data);\n  }\n\n  buildAnalyzeWebsiteLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.name);\n      label = _.replace(label, '$website', target.entity.label!);\n      label = _.replace(label, '$type', target.entityType.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n    return target.timeShift && target.timeShiftIsValid\n      ? item.name + ' (' + target.entity.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.name + ' (' + target.entity.label + ')' + ' - ' + key;\n  }\n}\n","export default [\n  { key: 'calls', label: 'Call count', description: 'calls', aggregations: [{ key: 'SUM', label: 'SUM' }] },\n  {\n    key: 'latency',\n    label: 'Call latency',\n    description: 'latency',\n    aggregations: [\n      { key: 'MAX', label: 'MAX' },\n      { key: 'MEAN', label: 'MEAN' },\n      { key: 'MIN', label: 'MIN' },\n      { key: 'P25', label: 'P25' },\n      { key: 'P50', label: 'P50' },\n      { key: 'P75', label: 'P75' },\n      { key: 'P90', label: 'P90' },\n      { key: 'P95', label: 'P95' },\n      { key: 'P98', label: 'P98' },\n      { key: 'P99', label: 'P99' },\n    ],\n  },\n  { key: 'errors', label: 'Error rate', description: 'errors', aggregations: [{ key: 'MEAN', label: 'MEAN' }] },\n  {\n    key: 'services',\n    label: 'Service Count',\n    description: 'services',\n    aggregations: [{ key: 'DISTINCT_COUNT', label: 'DISTINCT_COUNT' }],\n  },\n];\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize, hoursToMs } from '../util/time_util';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\nimport { InstanaQuery } from '../types/instana_query';\nimport { createTagFilter, readItemMetrics } from '../util/analyze_util';\nimport { emptyResultData } from '../util/target_util';\nimport { ALL_APPLICATIONS, PAGINATION_LIMIT } from '../GlobalVariables';\nimport defaultApplicationMetricCatalog from '../lists/default_metric_catalog';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\n\nexport class DataSourceApplication {\n  instanaOptions: InstanaOptions;\n  applicationsCache: Cache<Promise<SelectableValue[]>>;\n  miscCache: Cache<any>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.applicationsCache = new Cache<Promise<SelectableValue[]>>();\n    this.miscCache = new Cache<any>();\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter): any {\n    // do not try to execute to big queries\n    if (isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.instanaOptions.queryinterval_limit_app_calls))) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.instanaOptions.queryinterval_limit_app_calls +\n          ' hours'\n      );\n    }\n\n    // avoid invalid calls\n    if (\n      !target ||\n      !target.metric ||\n      !target.metric.key ||\n      !target.group ||\n      !target.group.key ||\n      !target.entity ||\n      (!target.entity.key && !target.entity.label)\n    ) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    return this.fetchAnalyzeMetricsForApplication(target, timeFilter).then((response) => {\n      target.showWarningCantShowAllResults = response.data.canLoadMore;\n      return readItemMetrics(target, response, this.buildAnalyzeApplicationLabel);\n    });\n  }\n\n  getApplications(timeFilter: TimeFilter) {\n    const key = getTimeKey(timeFilter);\n\n    let applications = this.applicationsCache.get(key);\n    if (applications) {\n      return applications;\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    let page = 1;\n    let pageSize = 200;\n\n    applications = this.paginateApplications([], windowSize, timeFilter.to, page, pageSize, PAGINATION_LIMIT).then(\n      (response: any) => {\n        let allResults = _.flattenDeep(\n          _.map(response, (pageSet) => {\n            return pageSet.items;\n          })\n        );\n\n        return _.orderBy(\n          _.compact(allResults).map((entry) => {\n            return {\n              key: entry.id,\n              label: entry.label,\n            };\n          }),\n          [(application) => application.label.toLowerCase()],\n          ['asc']\n        );\n      }\n    );\n\n    this.applicationsCache.put(key, applications, 600000);\n    return applications;\n  }\n\n  paginateApplications(\n    results: any,\n    windowSize: number,\n    to: number,\n    page: number,\n    pageSize: number,\n    pageLimit: number\n  ) {\n    if (page > pageLimit) {\n      return results;\n    }\n\n    let queryParameters = 'windowSize=' + windowSize + '&to=' + to + '&page=' + page + '&pageSize=' + pageSize;\n\n    return getRequest(this.instanaOptions, '/api/application-monitoring/applications?' + queryParameters).then(\n      (response: any) => {\n        results.push(response.data);\n        if (page * pageSize < response.data.totalHits) {\n          page++;\n          return this.paginateApplications(results, windowSize, to, page, pageSize, pageLimit);\n        } else {\n          return results;\n        }\n      }\n    );\n  }\n\n  getApplicationTags() {\n    let applicationTags = this.miscCache.get('applicationTags');\n    if (applicationTags) {\n      return applicationTags;\n    }\n\n    applicationTags = getRequest(this.instanaOptions, '/api/application-monitoring/catalog/tags').then(\n      (tagsResponse: any) =>\n        tagsResponse.data.map((entry: any) => ({\n          key: entry.name,\n          label: entry.name,\n          type: entry.type,\n          canApplyToSource: entry.canApplyToSource,\n          canApplyToDestination: entry.canApplyToDestination,\n        }))\n    );\n    this.miscCache.put('applicationTags', applicationTags);\n\n    return applicationTags;\n  }\n\n  getApplicationMetricsCatalog() {\n    return defaultApplicationMetricCatalog;\n  }\n\n  fetchAnalyzeMetricsForApplication(target: InstanaQuery, timeFilter: TimeFilter) {\n    const windowSize = getWindowSize(timeFilter);\n    const tagFilters: any[] = [];\n\n    return Promise.resolve(this.getApplicationTags()).then((applicationTags) => {\n      if (target.entity.key) {\n        tagFilters.push({\n          name: 'application.name',\n          operator: 'EQUALS',\n          value: target.entity.label!,\n          entity:\n            target.applicationCallToEntity && target.applicationCallToEntity.key\n              ? target.applicationCallToEntity.key\n              : 'DESTINATION',\n        });\n      }\n\n      _.forEach(target.filters, (filter) => {\n        if (filter.isValid) {\n          let tagFilter: any = createTagFilter(filter);\n          const tag = _.find(applicationTags, ['key', filter.tag.key]);\n          if (tag.canApplyToDestination || tag.canApplyToSource) {\n            tagFilter['entity'] = this.getTagEntity(filter.entity, tag);\n          }\n          tagFilters.push(tagFilter);\n        }\n      });\n\n      const metric: any = {\n        metric: target.metric.key,\n        aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n      };\n\n      if (!target.timeInterval) {\n        target.timeInterval = getDefaultChartGranularity(windowSize);\n      }\n      metric['granularity'] = target.timeInterval.key;\n\n      const group: any = {\n        groupbyTag: target.group.key,\n      };\n      const tag: any = _.find(applicationTags, ['key', target.group.key]);\n      if (tag.canApplyToDestination || tag.canApplyToSource) {\n        group['groupbyTagEntity'] = this.getTagEntity(target.group, tag);\n      }\n      if (target.group.type === 'KEY_VALUE_PAIR' && target.groupbyTagSecondLevelKey) {\n        group['groupbyTagSecondLevelKey'] = target.groupbyTagSecondLevelKey;\n      }\n\n      const data: any = {\n        group: group,\n        timeFrame: {\n          to: timeFilter.to,\n          windowSize: windowSize,\n        },\n        tagFilters: tagFilters,\n        metrics: [metric],\n      };\n      return postRequest(\n        this.instanaOptions,\n        '/api/application-monitoring/analyze/call-groups?fillTimeSeries=true',\n        data\n      );\n    });\n  }\n\n  getTagEntity(selectedEntity: any, tag: any): string {\n    if (selectedEntity && selectedEntity.key === 'DESTINATION' && tag.canApplyToDestination) {\n      return 'DESTINATION';\n    }\n    if (selectedEntity && selectedEntity.key === 'SOURCE' && tag.canApplyToSource) {\n      return 'SOURCE';\n    }\n    return tag.canApplyToDestination ? 'DESTINATION' : 'SOURCE';\n  }\n\n  fetchApplicationMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // avoid invalid calls\n    if (!target || !target.metric || !target.metric.key) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    const metric: any = {\n      metric: target.metric.key,\n      aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n    };\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n    metric['granularity'] = target.timeInterval.key;\n\n    const data: any = {\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      metrics: [metric],\n    };\n\n    if (target.entity.key !== null) {\n      data['applicationId'] = target.entity.key;\n    }\n\n    return postRequest(\n      this.instanaOptions,\n      '/api/application-monitoring/metrics/applications?fillTimeSeries=true',\n      data\n    );\n  }\n\n  buildAnalyzeApplicationLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.name);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.entity.label === ALL_APPLICATIONS) {\n      return target.timeShift ? item.name + ' - ' + key + ' - ' + target.timeShift : item.name + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.name + ' (' + target.entity.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.name + ' (' + target.entity.label + ')' + ' - ' + key;\n  }\n\n  buildApplicationMetricLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.application.label);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.entity.label === ALL_APPLICATIONS) {\n      return target.timeShift\n        ? item.application.label + ' - ' + key + ' - ' + target.timeShift\n        : item.application.label + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.application.label + ' (' + target.entity.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.application.label + ' (' + target.entity.label + ')' + ' - ' + key;\n  }\n}\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize } from '../util/time_util';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\nimport { InstanaQuery } from '../types/instana_query';\nimport { PAGINATION_LIMIT } from '../GlobalVariables';\nimport { emptyResultData } from '../util/target_util';\n\nexport class DataSourceService {\n  instanaOptions: InstanaOptions;\n  servicesCache: Cache<Promise<SelectableValue[]>>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.servicesCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  getServicesOfApplication(target: InstanaQuery, timeFilter: TimeFilter) {\n    let applicationId = '';\n    if (target.entity && target.entity.key) {\n      applicationId = target.entity.key;\n    }\n\n    const key = getTimeKey(timeFilter) + applicationId;\n    let services = this.servicesCache.get(key);\n    if (services) {\n      return services;\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    let page = 1;\n    let pageSize = 200;\n\n    services = this.paginateServices(\n      [],\n      applicationId,\n      windowSize,\n      timeFilter.to,\n      page,\n      pageSize,\n      PAGINATION_LIMIT\n    ).then((response: any) => {\n      let allResults = _.flattenDeep(\n        _.map(response, (pageSet) => {\n          return pageSet.items;\n        })\n      );\n\n      return _.orderBy(\n        _.compact(allResults).map((entry) => {\n          return {\n            key: entry.id,\n            label: entry.label,\n          };\n        }),\n        [(service) => service.label.toLowerCase()],\n        ['asc']\n      );\n    });\n\n    this.servicesCache.put(key, services, 600000);\n    return services;\n  }\n\n  paginateServices(\n    results: any,\n    applicationId: string,\n    windowSize: number,\n    to: number,\n    page: number,\n    pageSize: number,\n    pageLimit: number\n  ) {\n    if (page > pageLimit) {\n      return results;\n    }\n\n    let queryParameters = 'windowSize=' + windowSize + '&to=' + to + '&page=' + page + '&pageSize=' + pageSize;\n\n    let url =\n      '/api/application-monitoring/applications;id=' +\n      (applicationId ? applicationId : '') +\n      '/services?' +\n      queryParameters;\n\n    return getRequest(this.instanaOptions, url).then((response: any) => {\n      results.push(response.data);\n      if (page * pageSize < response.data.totalHits) {\n        page++;\n        return this.paginateServices(results, applicationId, windowSize, to, page, pageSize, pageLimit);\n      } else {\n        return results;\n      }\n    });\n  }\n\n  fetchServiceMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // avoid invalid calls\n    if (!target || !target.metric || !target.metric.key) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n\n    const metric = {\n      metric: target.metric.key,\n      aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n      granularity: target.timeInterval.key,\n    };\n\n    const data: any = {\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      metrics: [metric],\n    };\n\n    if (target.entity && target.entity.key) {\n      //see migration.ts why \"NO_SERVICE_FILTER\"\n      data['applicationId'] = target.entity.key;\n    }\n\n    if (target.service && target.service.key) {\n      data['serviceId'] = target.service.key;\n    }\n\n    return postRequest(this.instanaOptions, '/api/application-monitoring/metrics/services?fillTimeSeries=true', data);\n  }\n\n  buildServiceMetricLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.service.label);\n      label = _.replace(label, '$service', target.service.label!);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', index + 1 + '');\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.service.key === null) {\n      return target.timeShift\n        ? item.service.label + ' - ' + key + ' - ' + target.timeShift\n        : item.service.label + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.service.label + ' (' + target.service.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.service.label + ' (' + target.service.label + ')' + ' - ' + key;\n  }\n}\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize } from '../util/time_util';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { InstanaQuery } from '../types/instana_query';\nimport { ALL_ENDPOINTS, PAGINATION_LIMIT } from '../GlobalVariables';\nimport { emptyResultData } from '../util/target_util';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\n\nexport class DataSourceEndpoint {\n  instanaOptions: InstanaOptions;\n  endpointsCache: Cache<Promise<SelectableValue[]>>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.endpointsCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  getEndpointsOfService(target: InstanaQuery, timeFilter: TimeFilter) {\n    let applicationId = '';\n    if (target.entity && target.entity.key) {\n      applicationId = target.entity.key;\n    }\n\n    let serviceId = '';\n    if (target.service) {\n      serviceId = target.service.key;\n    }\n\n    const key = getTimeKey(timeFilter) + applicationId + serviceId;\n    let endpoints = this.endpointsCache.get(key);\n    if (endpoints) {\n      return endpoints;\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    let page = 1;\n    let pageSize = 200;\n\n    endpoints = this.paginateEndpoints(\n      [],\n      applicationId,\n      serviceId,\n      windowSize,\n      timeFilter.to,\n      page,\n      pageSize,\n      PAGINATION_LIMIT\n    ).then((response: any) => {\n      let allResults = _.flattenDeep(\n        _.map(response, (pageSet, index) => {\n          return pageSet.items;\n        })\n      );\n\n      return _.orderBy(\n        _.compact(allResults).map((entry) => {\n          return {\n            key: entry.id,\n            label: entry.label,\n          };\n        }),\n        [(endpoint) => endpoint.label.toLowerCase()],\n        ['asc']\n      );\n    });\n\n    this.endpointsCache.put(key, endpoints, 600000);\n    return endpoints;\n  }\n\n  paginateEndpoints(\n    results: any,\n    applicationId: string,\n    serviceId: string,\n    windowSize: number,\n    to: number,\n    page: number,\n    pageSize: number,\n    pageLimit: number\n  ) {\n    if (page > pageLimit) {\n      return results;\n    }\n\n    var queryParameters = 'windowSize=' + windowSize + '&to=' + to + '&page=' + page + '&pageSize=' + pageSize;\n\n    var url =\n      '/api/application-monitoring/applications;id=' +\n      (applicationId ? applicationId : '') +\n      '/services;id=' +\n      (serviceId ? serviceId : '') +\n      '/endpoints?' +\n      queryParameters;\n\n    return getRequest(this.instanaOptions, url).then((response: any) => {\n      results.push(response.data);\n      if (page * pageSize < response.data.totalHits) {\n        page++;\n        return this.paginateEndpoints(results, applicationId, serviceId, windowSize, to, page, pageSize, pageLimit);\n      } else {\n        return results;\n      }\n    });\n  }\n\n  fetchEndpointMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // avoid invalid calls\n    if (!target || !target.metric || !target.metric.key) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    const metric: any = {\n      metric: target.metric.key,\n      aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n    };\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n    metric['granularity'] = target.timeInterval.key;\n\n    const data: any = {\n      endpointId: target.endpoint.key,\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      metrics: [metric],\n    };\n\n    if (target.entity && target.entity.key) {\n      //see migration.ts why \"ALL_SERVICES\"\n      data['applicationId'] = target.entity.key;\n    }\n\n    if (target.service && target.service.key) {\n      data['serviceId'] = target.service.key;\n    }\n\n    return postRequest(this.instanaOptions, '/api/application-monitoring/metrics/endpoints?fillTimeSeries=true', data);\n  }\n\n  buildEndpointMetricLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.endpoint.label);\n      label = _.replace(label, '$endpoint', target.endpoint.label!);\n      label = _.replace(label, '$service', target.service.label!);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.endpoint.label === ALL_ENDPOINTS) {\n      return target.timeShift\n        ? item.endpoint.label + ' - ' + key + ' - ' + target.timeShift\n        : item.endpoint.label + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.endpoint.label + ' (' + target.endpoint.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.endpoint.label + ' (' + target.endpoint.label + ')' + ' - ' + key;\n  }\n}\n","// can be removed once mixpanel shows no old plugins around\nimport _ from 'lodash';\nimport metric_categories from './lists/metric_categories';\n\nexport default function (target: any) {\n  // 1.3.1 towards 2.0.0\n  if (target.entityType && typeof target.entityType === 'string') {\n    target.entityType = { key: target.entityType, label: target.entityType };\n  }\n\n  // 2.3.1 towards 2.4.0\n  if (target.filter && target.filter !== '') {\n    if (!target.customFilters) {\n      target.customFilters = [];\n      target.customFilters.push({ value: target.filter });\n    }\n  }\n\n  // 2.4.2 towards 2.4.3\n  if (target.timeInterval) {\n    if (target.timeInterval.value) {\n      target.timeInterval = { key: target.timeInterval.value, label: target.timeInterval.label };\n    } else if (target.timeInterval.rollup) {\n      target.timeInterval = { key: target.timeInterval.rollup, label: target.timeInterval.label };\n    }\n  }\n\n  //2.4.4 towards 2.5.0\n  if (target.metricCategory === '5') {\n    //old service metric view\n    target.metricCategory = '4';\n    target.service = {}; //because target.service does not exist yet.\n    target.service.key = target.entity.key;\n    target.service.label = target.entity.label;\n    if (target.selectedApplication && target.selectedApplication.key) {\n      target.entity.key = target.selectedApplication.key;\n      target.entity.label = target.selectedApplication.label;\n    } else {\n      target.entity.key = null;\n      target.entity.label = 'Test';\n    }\n  }\n\n  //2.4.4 towards 2.5.0\n  if (target.metricCategory === '6') {\n    //old endpoint metric view\n    target.metricCategory = '4';\n    target.endpoint = {}; //because target.endpoint does not exist yet.\n    target.endpoint.key = target.entity.key;\n    if (target.selectedApplication && target.selectedApplication.key) {\n      target.entity.key = target.selectedApplication.key;\n      target.entity.label = target.selectedApplication.label;\n    } else {\n      target.entity.key = null;\n      target.entity.label = 'Test';\n    }\n  }\n\n  //2.7.3 towards 3.0 (Angular to React Migration)\n  if (target.aggregation && typeof target.aggregation === 'string') {\n    target.aggregation\n      ? (target.aggregation = { key: target.aggregation, label: target.aggregation })\n      : (target.aggregation = {});\n    target.aggregationFunction\n      ? (target.aggregationFunction = {\n          key: target.aggregationFunction.label,\n          label: target.aggregationFunction.label,\n        })\n      : (target.aggregationFunction = {});\n  }\n  if (target.customFilters && target.customFilters.length > 0 && target.customFilters[0].value) {\n    target.customFilters = _.map(target.customFilters, (cf) => cf.value);\n  }\n  if (target.filters && target.filters.length > 0 && !target.filters[0].tag.key && !target.filters[0].tag.label) {\n    _.forEach(target.filters, (filter) => {\n      filter.tag.label = filter.tag.key;\n    });\n    console.log('filters', target.filters);\n  }\n  if (target.group && target.group.key && !target.group.label) {\n    target.group.label = target.group.key;\n  }\n  if (target.metricCategory && typeof target.metricCategory === 'string') {\n    target.metricCategory = _.find(\n      metric_categories,\n      (category) => category.key === parseInt(target.metricCategory, 10)\n    );\n  }\n}\n","import {\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  DataSourceInstanceSettings,\n  SelectableValue,\n} from '@grafana/data';\nimport { InstanaQuery } from '../types/instana_query';\nimport { InstanaOptions } from '../types/instana_options';\nimport { getRequest, instanaUrl } from '../util/request_handler';\nimport { DataSourceSlo } from './DataSource_Slo';\nimport MetricCategories from '../lists/metric_categories';\nimport TimeFilter from '../types/time_filter';\nimport { hoursToMs, readTime } from '../util/time_util';\nimport Cache from '../cache';\nimport { emptyResultData } from '../util/target_util';\nimport _ from 'lodash';\nimport { DataSourceInfrastructure } from './Datasource_Infrastructure';\nimport {\n  getDefaultChartGranularity,\n  getDefaultMetricRollupDuration,\n  getPossibleGranularities,\n  getPossibleRollups,\n} from '../util/rollup_granularity_util';\nimport { appendData, generateStableHash, hasIntersection } from '../util/delta_util';\nimport {\n  ANALYZE_APPLICATION_METRICS,\n  ANALYZE_WEBSITE_METRICS,\n  APPLICATION_SERVICE_ENDPOINT_METRICS,\n  BUILT_IN_METRICS,\n  CUSTOM_METRICS,\n  SLO_INFORMATION,\n} from '../GlobalVariables';\nimport getVersion from '../util/instana_version';\nimport { aggregateTarget } from '../util/aggregation_util';\nimport { DataSourceWebsite } from './DataSource_Website';\nimport { DataSourceApplication } from './DataSource_Application';\nimport { DataSourceService } from './DataSource_Service';\nimport { DataSourceEndpoint } from './DataSource_Endpoint';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\nimport { readItemMetrics } from '../util/analyze_util';\nimport migrate from '../migration';\n\nexport class DataSource extends DataSourceApi<InstanaQuery, InstanaOptions> {\n  options: InstanaOptions;\n  dataSourceInfrastructure: DataSourceInfrastructure;\n  dataSourceWebsite: DataSourceWebsite;\n  dataSourceApplication: DataSourceApplication;\n  dataSourceService: DataSourceService;\n  dataSourceEndpoint: DataSourceEndpoint;\n  dataSourceSlo: DataSourceSlo;\n  timeFilter!: TimeFilter;\n  availableGranularities: SelectableValue[];\n  availableRollups: SelectableValue[];\n  availableTimeIntervals: SelectableValue[];\n  resultCache: Cache<any>;\n\n  constructor(instanceSettings: DataSourceInstanceSettings<InstanaOptions>) {\n    super(instanceSettings);\n    this.options = instanceSettings.jsonData;\n    this.options.url = instanaUrl(instanceSettings);\n    this.availableGranularities = [];\n    this.availableRollups = [];\n    this.availableTimeIntervals = [];\n    this.dataSourceSlo = new DataSourceSlo(instanceSettings.jsonData);\n    this.dataSourceInfrastructure = new DataSourceInfrastructure(instanceSettings.jsonData);\n    this.dataSourceWebsite = new DataSourceWebsite(instanceSettings.jsonData);\n    this.dataSourceApplication = new DataSourceApplication(instanceSettings.jsonData);\n    this.dataSourceService = new DataSourceService(instanceSettings.jsonData);\n    this.dataSourceEndpoint = new DataSourceEndpoint(instanceSettings.jsonData);\n    this.resultCache = new Cache<any>();\n  }\n\n  async query(options: DataQueryRequest<InstanaQuery>): Promise<DataQueryResponse> {\n    const { range } = options;\n    this.timeFilter = readTime(range!);\n    this.availableRollups = getPossibleRollups(this.timeFilter);\n    this.availableGranularities = getPossibleGranularities(this.timeFilter.windowSize);\n\n    return Promise.all(\n      options.targets.map((target) => {\n        let targetTimeFilter = readTime(range!);\n\n        // grafana setting to disable query execution\n        if (target.hide) {\n          return { data: [], target: target };\n        }\n\n        migrate(target);\n\n        if (!target.metricCategory) {\n          target.metricCategory = MetricCategories[0];\n        }\n\n        this.setPossibleTimeIntervals(target);\n\n        // target migration for downwards compatibility\n        migrate(target);\n\n        if (target.timeShift) {\n          let millis = this.convertTimeShiftToMillis(target.timeShift);\n          if (millis) {\n            targetTimeFilter = this.applyTimeShiftOnTimeFilter(targetTimeFilter, millis);\n          }\n        }\n\n        target.timeFilter = targetTimeFilter;\n        target.stableHash = generateStableHash(target);\n        targetTimeFilter = this.adjustTimeFilterIfCached(targetTimeFilter, target);\n\n        if (target.metricCategory.key === SLO_INFORMATION) {\n          return this.dataSourceSlo.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (target.metricCategory.key === BUILT_IN_METRICS || target.metricCategory.key === CUSTOM_METRICS) {\n          return this.dataSourceInfrastructure.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (target.metricCategory.key === ANALYZE_WEBSITE_METRICS) {\n          return this.dataSourceWebsite.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (target.metricCategory.key === ANALYZE_APPLICATION_METRICS) {\n          return this.dataSourceApplication.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (target.metricCategory.key === APPLICATION_SERVICE_ENDPOINT_METRICS) {\n          return this.getApplicationServiceEndpointMetrics(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        }\n\n        return Promise.resolve(emptyResultData(target.refId));\n      })\n    ).then((targetData) => {\n      let result: any = [];\n      _.each(targetData, (targetAndData) => {\n        // Flatten the list as Grafana expects a list of targets with corresponding datapoints.\n        let resultData = _.compact(_.flatten(targetAndData.data)); // Also remove empty data items\n        this.applyTimeShiftIfNecessary(resultData, targetAndData.target);\n        resultData = this.aggregateDataIfNecessary(resultData, targetAndData.target);\n        this.cacheResultIfNecessary(resultData, targetAndData.target);\n        result.push(resultData);\n      });\n\n      return { data: _.flatten(result) };\n    });\n  }\n\n  getApplicationServiceEndpointMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // do not try to execute too big queries\n    if (isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.options.queryinterval_limit_app_metrics))) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.options.queryinterval_limit_app_metrics +\n          ' hours'\n      );\n    }\n\n    if (target.endpoint && target.endpoint.key) {\n      return this.dataSourceEndpoint.fetchEndpointMetrics(target, timeFilter).then((response: any) => {\n        return readItemMetrics(target, response, this.dataSourceEndpoint.buildEndpointMetricLabel);\n      });\n    } else if (target.service && target.service.key) {\n      return this.dataSourceService.fetchServiceMetrics(target, timeFilter).then((response: any) => {\n        return readItemMetrics(target, response, this.dataSourceService.buildServiceMetricLabel);\n      });\n    } else if (target.entity && target.entity.key) {\n      return this.dataSourceApplication.fetchApplicationMetrics(target, timeFilter).then((response: any) => {\n        if (response.data) {\n          target.showWarningCantShowAllResults = response.data.canLoadMore;\n        }\n        return readItemMetrics(target, response, this.dataSourceApplication.buildApplicationMetricLabel);\n      });\n    }\n\n    return Promise.resolve({ data: { items: [] } });\n  }\n\n  applyTimeShiftIfNecessary(data: any, target: InstanaQuery) {\n    data.forEach((data: any) => {\n      if (target.timeShift) {\n        this.applyTimeShiftOnData(data, this.convertTimeShiftToMillis(target.timeShift));\n      }\n    });\n  }\n\n  cacheResultIfNecessary(result: any, target: InstanaQuery) {\n    if (this.supportsDeltaRequests(target) && this.hasResult(result)) {\n      let cachedObj = {\n        timeFilter: target.timeFilter,\n        results: result,\n      };\n      this.resultCache.put(target.stableHash, cachedObj, 400000); // to cover at least 5 min refreshs\n    }\n  }\n\n  supportsDeltaRequests(target: InstanaQuery): boolean {\n    if (target.metricCategory && target.metricCategory.key === SLO_INFORMATION) {\n      return false;\n    }\n\n    let version = this.resultCache.get('version');\n    if (!version) {\n      return getVersion(this.options).then((version: any) => {\n        this.resultCache.put('version', version, 3600000); // one hour\n        return version >= 171;\n      });\n    }\n\n    return version >= 171;\n  }\n\n  hasResult(result: any) {\n    return result && result.length > 0;\n  }\n\n  applyTimeShiftOnData(data: any, timeshift: any) {\n    data.datapoints.forEach((datapoint: any) => {\n      datapoint[1] = datapoint[1] + timeshift;\n    });\n  }\n\n  aggregateDataIfNecessary(data: any, target: InstanaQuery) {\n    let newData = [];\n\n    if (target.aggregateGraphs) {\n      const aggregatedData = aggregateTarget(data, target);\n      newData.push(aggregatedData);\n      if (!target.hideOriginalGraphs) {\n        _.each(data, (dt) => {\n          if (dt.target !== aggregatedData.target) {\n            newData.push(dt);\n          }\n        });\n      }\n      return newData;\n    }\n\n    return data;\n  }\n\n  buildTargetWithAppendedDataResult(target: InstanaQuery, timeFilter: TimeFilter, data: any) {\n    if (timeFilter.from !== target.timeFilter.from && data) {\n      data = this.appendResult(data, target);\n    }\n\n    return {\n      target: target,\n      data: data,\n    };\n  }\n\n  appendResult(data: any, target: InstanaQuery) {\n    let cachedResult = this.resultCache.get(target.stableHash);\n    if (cachedResult && cachedResult.results) {\n      data = appendData(data, cachedResult.results);\n    }\n    return data;\n  }\n\n  adjustTimeFilterIfCached(timeFilter: TimeFilter, target: InstanaQuery): TimeFilter {\n    let cachedResult = this.resultCache.get(target.stableHash);\n    if (cachedResult && hasIntersection(timeFilter, cachedResult.timeFilter)) {\n      let newFrom = this.getDeltaRequestTimestamp(cachedResult.results, cachedResult.timeFilter.from);\n      let newTo = Math.floor(timeFilter.to / 10000) * 10000;\n      return {\n        from: newFrom,\n        to: newTo,\n        windowSize: newTo - newFrom,\n      };\n    }\n    return timeFilter;\n  }\n\n  getDeltaRequestTimestamp(series: any, fromDefault: number): number {\n    const length = series[0].datapoints.length;\n    if (length === 0) {\n      return fromDefault;\n    }\n    const penultimate = length > 1 ? length - 2 : 1;\n    return series[0].datapoints[penultimate][1];\n  }\n\n  getSloReports(): Promise<SelectableValue[]> {\n    return this.dataSourceSlo.getConfiguredSLIs();\n  }\n\n  getEntityTypes(): Promise<SelectableValue[]> {\n    return this.dataSourceInfrastructure.getEntityTypes();\n  }\n\n  fetchApplications() {\n    return this.dataSourceApplication.getApplications(this.getTimeFilter());\n  }\n\n  fetchServices(target: InstanaQuery) {\n    return this.dataSourceService.getServicesOfApplication(target, this.getTimeFilter());\n  }\n\n  fetchEndpoints(target: InstanaQuery) {\n    return this.dataSourceEndpoint.getEndpointsOfService(target, this.getTimeFilter());\n  }\n\n  fetchTypesForTarget(query: InstanaQuery) {\n    return this.dataSourceInfrastructure.fetchTypesForTarget(query, this.getTimeFilter());\n  }\n\n  fetchWebsites(): Promise<SelectableValue[]> {\n    return this.dataSourceWebsite.getWebsites(this.getTimeFilter());\n  }\n\n  getDefaultTimeInterval(query: InstanaQuery) {\n    if (query.metricCategory.key === BUILT_IN_METRICS || query.metricCategory.key === CUSTOM_METRICS) {\n      return getDefaultMetricRollupDuration(this.getTimeFilter());\n    } else {\n      return getDefaultChartGranularity(this.getTimeFilter().windowSize);\n    }\n  }\n\n  convertTimeShiftToMillis(timeShift: string) {\n    if (!timeShift) {\n      return null;\n    }\n\n    try {\n      return this.parseTimeShift(timeShift);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  parseTimeShift(timeShift: string) {\n    let milliSeconds = 1000;\n\n    if (timeShift.endsWith('s')) {\n      return parseInt(timeShift.split('s')[0], 10) * milliSeconds;\n    } else if (timeShift.endsWith('m')) {\n      return parseInt(timeShift.split('m')[0], 10) * 60 * milliSeconds;\n    } else if (timeShift.endsWith('h')) {\n      return parseInt(timeShift.split('h')[0], 10) * 60 * 60 * milliSeconds;\n    } else if (timeShift.endsWith('d')) {\n      return parseInt(timeShift.split('d')[0], 10) * 60 * 60 * 24 * milliSeconds;\n    } else if (timeShift.endsWith('w')) {\n      return parseInt(timeShift.split('w')[0], 10) * 60 * 60 * 24 * 7 * milliSeconds;\n    }\n\n    return null;\n  }\n\n  applyTimeShiftOnTimeFilter(timeFilter: TimeFilter, timeShift: number): TimeFilter {\n    if (timeShift) {\n      return {\n        from: timeFilter.from - timeShift,\n        to: timeFilter.to - timeShift,\n        windowSize: timeFilter.windowSize,\n      };\n    } else {\n      return timeFilter;\n    }\n  }\n\n  setPossibleTimeIntervals(target: InstanaQuery) {\n    if (target.metricCategory.key === 0 || target.metricCategory.key === 1) {\n      this.availableTimeIntervals = this.availableRollups;\n    } else {\n      this.availableTimeIntervals = this.availableGranularities;\n    }\n  }\n\n  getTimeFilter(): TimeFilter {\n    if (!this.timeFilter || !this.timeFilter.from) {\n      const now = Math.floor(Date.now() / 1000) * 1000;\n      const windowSize = 6 * 60 * 60 * 1000; // 6h\n      this.timeFilter = {\n        from: now - windowSize,\n        to: now,\n        windowSize: windowSize,\n      };\n    }\n\n    return this.timeFilter;\n  }\n\n  testDatasource(): Promise<any> {\n    return getRequest(this.options, '/api/monitoringState').then(\n      () => {\n        return {\n          status: 'success',\n          message: 'Successfully connected to the Instana API.',\n          title: 'Success',\n        };\n      },\n      (error: any) => {\n        if (error.status === 401) {\n          return {\n            status: 'error',\n            message: 'Unauthorized. Please verify the API Token.',\n            title: 'Error',\n          };\n        } else {\n          console.log(error);\n          return {\n            status: 'error',\n            message: 'Error (' + error.status + ') connecting to the Instana API: ' + error.statusText,\n            title: 'Error',\n          };\n        }\n      }\n    );\n  }\n}\n","import _ from 'lodash';\n\n// check grafana version (5.3+)\nexport default () => {\n  const version = _.get(window, ['grafanaBootData', 'settings', 'buildInfo', 'version'], '3.0.0');\n  const versions = _.split(version, '.', 2).map((v) => {\n    return parseInt(v, 10);\n  });\n  return version[0] >= 6 || (versions[0] >= 5 && versions[1] >= 3);\n};\n","import React, { ChangeEvent, PureComponent } from 'react';\n\nimport { DataSourcePluginOptionsEditorProps, DataSourceSettings, SelectableValue } from '@grafana/data';\nimport { Legend, Field, Input, Checkbox, Icon, Tooltip } from '@grafana/ui';\nimport { InstanaOptions } from '../types/instana_options';\nimport getVersion from '../util/instana_version';\nimport proxyCheck from '../util/proxy_check';\nimport _ from 'lodash';\n\ninterface Props extends DataSourcePluginOptionsEditorProps<InstanaOptions> {}\n\ninterface State {\n  canQueryOfflineSnapshots: boolean;\n  canUseProxy: boolean;\n}\n\nexport class ConfigEditor extends PureComponent<Props, State> {\n  constructor(props: Readonly<Props>) {\n    super(props);\n    this.state = { canQueryOfflineSnapshots: false, canUseProxy: false };\n\n    // check possibility every time\n    this.detectFeatures();\n\n    const { options } = this.props;\n    const { jsonData } = options;\n\n    if (jsonData.useProxy === undefined) {\n      jsonData.useProxy = proxyCheck();\n    }\n  }\n\n  onInstanaOptionsChange = (eventItem: ChangeEvent<HTMLInputElement> | SelectableValue, key: keyof InstanaOptions) => {\n    const { options, onOptionsChange } = this.props;\n    const jsonData = {\n      ...options.jsonData,\n      [key]: eventItem.currentTarget.value,\n    };\n\n    onOptionsChange({ ...options, jsonData });\n\n    if ('url' === key || 'apiToken' === key) {\n      this.debouncedDetectFeatures(options);\n    }\n  };\n\n  onSwitchChange = (eventItem: SelectableValue<HTMLInputElement> | any, key: keyof InstanaOptions) => {\n    const { options, onOptionsChange } = this.props;\n    let value = false;\n\n    if (eventItem && eventItem.currentTarget) {\n      value = !options.jsonData[key];\n    }\n\n    const jsonData = {\n      ...options.jsonData,\n      [key]: value,\n    };\n\n    onOptionsChange({ ...options, jsonData });\n  };\n\n  debouncedDetectFeatures = (settings?: DataSourceSettings<InstanaOptions, {}>) => {\n    _.debounce(() => this.detectFeatures(settings), 500);\n  };\n\n  /**\n   * Checks whether the provided tenant-unit is able to provide certain features such as querying offline snapshots.\n   */\n  detectFeatures = (settings?: DataSourceSettings<InstanaOptions, {}>) => {\n    if (!settings) {\n      settings = this.props.options;\n    }\n\n    if (!settings.id) {\n      return;\n    }\n\n    this.setState({ canUseProxy: proxyCheck() });\n    getVersion(settings.jsonData).then((version: any) => {\n      version\n        ? this.setState({ canQueryOfflineSnapshots: version >= 156 })\n        : this.setState({ canQueryOfflineSnapshots: false });\n    });\n  };\n\n  render() {\n    const { options } = this.props;\n    const { jsonData } = options;\n\n    return (\n      <div>\n        <Legend>Instana configuration</Legend>\n\n        <Field\n          className={'width-30'}\n          horizontal\n          required\n          label=\"URL\"\n          description=\"The URL of your Instana installation.\"\n        >\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.url}\n            placeholder={'https://tools-acme.instana.io'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'url')}\n          />\n        </Field>\n\n        <Field\n          className={'width-30'}\n          horizontal\n          required\n          label=\"API Token\"\n          description=\"The API token to access the data.\"\n        >\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.apiToken}\n            suffix={\n              <Tooltip\n                content={\n                  <p>\n                    You can create API tokens following the instructions at\n                    <a href=\"https://docs.instana.io/quick_start/api/#api-tokens\">\n                      https://docs.instana.io/quick_start/api/#api-tokens\n                    </a>\n                  </p>\n                }\n                theme={'info'}\n              >\n                <Icon name=\"info-circle\" />\n              </Tooltip>\n            }\n            onChange={(event) => this.onInstanaOptionsChange(event, 'apiToken')}\n          />\n        </Field>\n\n        <Checkbox\n          css={''}\n          label={'Use Proxy'}\n          value={jsonData.useProxy}\n          onChange={(event) => this.onSwitchChange(event, 'useProxy')}\n          description={'Use Grafana server as proxy. Needs Grafana 5.3+ and Instana datasource 2.0.0+'}\n        />\n\n        <Checkbox\n          css={''}\n          label={'Enable offline snapshots'}\n          value={jsonData.showOffline}\n          onChange={(event) => this.onSwitchChange(event, 'showOffline')}\n          description={'Enables querying offline snapshots. Needs Instana release 156+ and Instana datasource 2.3.0+'}\n        />\n\n        <Checkbox\n          css={''}\n          label={'Enable SLO dashboards'}\n          value={jsonData.allowSlo}\n          onChange={(event) => this.onSwitchChange(event, 'allowSlo')}\n          description={\n            'Adds a new category that allows retrieval of SLO information. Needs Instana release 176+ and ' +\n            'a explicit feature flag.'\n          }\n        />\n\n        <br />\n        <br />\n        <b>Maximum query intervals in hours</b>\n        <p className={'width-30'}>\n          This settings are optional values to control the load of data queries, by defining the maximum allowed query\n          intervals against the Instana API.\n        </p>\n\n        <Field className={'width-30'} horizontal label=\"Infrastructure metrics\">\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.queryinterval_limit_infra}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_infra')}\n          />\n        </Field>\n\n        <Field className={'width-30'} horizontal label=\"Application metrics\">\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.queryinterval_limit_app_metrics}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_app_metrics')}\n          />\n        </Field>\n\n        <Field className={'width-30'} horizontal label=\"Analyze application calls\">\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.queryinterval_limit_app_calls}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_app_calls')}\n          />\n        </Field>\n\n        <Field className={'width-30'} horizontal label=\"Analyze website\">\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.queryinterval_limit_website_metrics}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_website_metrics')}\n          />\n        </Field>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ninterface WrapperProps {\n  disabled?: boolean;\n  stretch?: boolean;\n  children: any;\n}\n\nexport default function FormWrapper(props: WrapperProps) {\n  const style: any = { display: 'flex' };\n\n  if (props.disabled) {\n    style.opacity = '0.4';\n    style.pointerEvents = 'none';\n  }\n\n  if (props.stretch) {\n    style.width = '100%';\n  }\n\n  return <div style={style}>{props.children}</div>;\n}\n","import React from 'react';\n\nimport { InlineFormLabel, Select, PopoverContent } from '@grafana/ui';\nimport FormWrapper from './FormWrapper';\nimport { SelectableValue } from '@grafana/data';\n\ninterface State {}\n\ninterface Props {\n  label: string;\n  value: SelectableValue;\n  options: any;\n  queryKeyword?: boolean;\n  disabled?: boolean;\n  defaultValue?: SelectableValue;\n  noOptionsMessage?: string;\n  searchable?: boolean | true;\n  labelWidth?: number | 14;\n  inputWidth?: number | 30;\n  placeholder?: string | '-';\n  tooltip?: PopoverContent;\n\n  onChange(event?: any): any;\n}\n\n/**\n * Default select field including label. Select element is grafana/ui <Select />.\n */\nexport default class FormSelect extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    const {\n      label,\n      tooltip,\n      searchable = true,\n      disabled,\n      queryKeyword,\n      placeholder = '-',\n      labelWidth = 14,\n      inputWidth = 30,\n      ...remainingProps\n    } = this.props;\n\n    return (\n      <FormWrapper disabled={disabled} stretch={!inputWidth}>\n        <InlineFormLabel className={queryKeyword ? 'query-keyword' : ''} width={labelWidth} tooltip={tooltip}>\n          {label}\n        </InlineFormLabel>\n        <Select\n          menuPlacement={'bottom'}\n          disabled={disabled}\n          width={inputWidth}\n          isSearchable={searchable}\n          placeholder={placeholder}\n          {...remainingProps}\n        />\n      </FormWrapper>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { ALL_APPLICATIONS, ALL_ENDPOINTS, ALL_SERVICES } from '../../GlobalVariables';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport FormSelect from '../FormField/FormSelect';\nimport { SelectableValue } from '@grafana/data';\nimport { Input } from '@grafana/ui';\nimport _ from 'lodash';\n\ninterface ApplicationServiceEndpointMetricsState {\n  applications: SelectableValue[];\n  services: SelectableValue[];\n  endpoints: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n\n  updateMetrics(metrics: SelectableValue[]): void;\n\n  datasource: DataSource;\n}\n\nlet isUnmounting = false;\n\nexport class ApplicationServiceEndpointMetrics extends React.Component<Props, ApplicationServiceEndpointMetricsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      applications: [],\n      services: [],\n      endpoints: [],\n    };\n  }\n\n  componentDidMount() {\n    isUnmounting = false;\n    this.loadApplications();\n    this.loadServices();\n    this.loadEndpoints();\n\n    const { datasource } = this.props;\n    this.props.updateMetrics(datasource.dataSourceApplication.getApplicationMetricsCatalog());\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  loadApplications() {\n    const { query, onChange, datasource } = this.props;\n    datasource.fetchApplications().then((applications) => {\n      if (!isUnmounting) {\n        this.setState({\n          applications: applications,\n        });\n\n        if (!_.find(this.state.applications, { key: null })) {\n          let apps = this.state.applications;\n          apps.unshift({ key: null, label: ALL_APPLICATIONS });\n          this.setState({\n            applications: apps,\n          });\n        }\n\n        // replace removed application\n        if (\n          query.entity &&\n          query.entity.key &&\n          !_.find(this.state.applications, (app) => app.key === query.entity.key)\n        ) {\n          query.entity = this.state.applications[0];\n        } else if ((!query.entity || !query.entity.key) && applications) {\n          query.entity = this.state.applications[0];\n        }\n\n        onChange(query);\n      }\n    });\n  }\n\n  loadServices() {\n    const { query, onChange, datasource } = this.props;\n    datasource.fetchServices(query).then((services) => {\n      if (!isUnmounting) {\n        this.setState({\n          services: services,\n        });\n\n        if (!_.find(this.state.services, { key: null })) {\n          let s = this.state.services;\n          s.unshift({ key: null, label: ALL_SERVICES });\n          this.setState({\n            services: s,\n          });\n        }\n\n        if (query.service && query.service.key) {\n          if (!_.find(this.state.services, (app) => app.key === query.service.key)) {\n            query.service = this.state.services[0];\n          }\n        } else {\n          query.service = this.state.services[0];\n        }\n\n        onChange(query);\n      }\n    });\n  }\n\n  loadEndpoints() {\n    const { query, onChange, datasource } = this.props;\n    datasource.fetchEndpoints(query).then((endpoints) => {\n      if (!isUnmounting) {\n        this.setState({\n          endpoints: endpoints,\n        });\n\n        if (!_.find(this.state.endpoints, { key: null })) {\n          let e = this.state.endpoints;\n          e.unshift({ key: null, label: ALL_ENDPOINTS });\n          this.setState({\n            endpoints: e,\n          });\n        }\n\n        if (query.endpoint && query.endpoint.key) {\n          if (!_.find(this.state.endpoints, (app) => app.key === query.endpoint.key)) {\n            query.endpoint = { key: null, label: ALL_ENDPOINTS };\n          }\n        } else {\n          query.endpoint = { key: null, label: ALL_ENDPOINTS };\n        }\n\n        onChange(query);\n      }\n    });\n  }\n\n  onApplicationChange = (application: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.entity = application;\n    onChange(query);\n    this.loadServices();\n    this.loadEndpoints();\n    onRunQuery();\n  };\n\n  onServiceChange = (service: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.service = service;\n    onChange(query);\n    this.loadEndpoints();\n    onRunQuery();\n  };\n\n  onEndpointChange = (endpoint: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.endpoint = endpoint;\n    onChange(query);\n    onRunQuery();\n  };\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onGroupByTagSecondLevelKeyChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.groupbyTagSecondLevelKey = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSelect\n          queryKeyword\n          inputWidth={0}\n          label={'Application'}\n          tooltip={'Select your application.'}\n          value={query.entity}\n          options={this.state.applications}\n          onChange={this.onApplicationChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          inputWidth={0}\n          label={'Service'}\n          tooltip={'Select your service.'}\n          value={query.service}\n          options={this.state.services}\n          onChange={this.onServiceChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          inputWidth={0}\n          label={'Endpoints'}\n          tooltip={'Select your endpoint.'}\n          value={query.endpoint}\n          options={this.state.endpoints}\n          onChange={this.onEndpointChange}\n        />\n\n        <div style={!query.showGroupBySecondLevel ? { display: 'none' } : {}}>\n          <Input css={''} value={query.groupbyTagSecondLevelKey} onChange={this.onGroupByTagSecondLevelKeyChange} />\n        </div>\n      </div>\n    );\n  }\n}\n","export default [\n  { key: 'DESTINATION', label: 'Dest' },\n  { key: 'SOURCE', label: 'Src' },\n];\n","import React, { ChangeEvent } from 'react';\n\nimport { ALL_APPLICATIONS, ANALYZE_APPLICATION_METRICS } from '../../GlobalVariables';\nimport call_to_entities from '../../lists/apply_call_to_entities';\nimport { Input, Select, InlineFormLabel } from '@grafana/ui';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport FormWrapper from '../FormField/FormWrapper';\nimport { SelectableValue } from '@grafana/data';\nimport _ from 'lodash';\n\ninterface ApplicationCallsMetricsState {\n  applications: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n\n  groups: SelectableValue[];\n\n  updateGroups(groups: SelectableValue[]): void;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n\n  updateMetrics(metrics: SelectableValue[]): void;\n\n  datasource: DataSource;\n}\n\nlet isUnmounting = false;\n\nexport class ApplicationCallsMetrics extends React.Component<Props, ApplicationCallsMetricsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      applications: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query, datasource, onChange } = this.props;\n    isUnmounting = false;\n    datasource.fetchApplications().then((applications) => {\n      if (!isUnmounting) {\n        if (!_.find(applications, { key: null })) {\n          applications.unshift({ key: null, label: ALL_APPLICATIONS });\n        }\n\n        this.setState({\n          applications: applications,\n        });\n\n        if (!query.entity || (!query.entity.key && !query.entity.label)) {\n          query.entity = applications[0];\n        }\n\n        if (!query.callToEntity || !query.callToEntity.key) {\n          query.callToEntity = call_to_entities[0];\n        }\n        if (!query.applicationCallToEntity || !query.applicationCallToEntity.key) {\n          query.applicationCallToEntity = call_to_entities[0];\n        }\n\n        onChange(query);\n      }\n    });\n\n    datasource.dataSourceApplication.getApplicationTags().then((applicationTags: any) => {\n      if (!isUnmounting) {\n        this.props.updateGroups(_.sortBy(applicationTags, 'key'));\n\n        // select a meaningful default group\n        if (!query.group || !query.group.key) {\n          query.group = _.find(applicationTags, ['key', 'endpoint.name']);\n          onChange(query);\n        }\n      }\n    });\n\n    this.props.updateMetrics(datasource.dataSourceApplication.getApplicationMetricsCatalog());\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  onApplicationChange = (application: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.entity = application;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onGroupChange = (group: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.group = group;\n\n    if (query.group && query.metricCategory.key === ANALYZE_APPLICATION_METRICS) {\n      query.showGroupBySecondLevel = query.group.type === 'KEY_VALUE_PAIR';\n    }\n\n    if (!query.showGroupBySecondLevel) {\n      query.groupbyTagSecondLevelKey = '';\n    }\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  onApplicationCallToEntityChange = (applicationCallToEntity: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.applicationCallToEntity = applicationCallToEntity;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onCallToEntityChange = (callToEntity: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.callToEntity = callToEntity;\n    onChange(query);\n    onRunQuery();\n  };\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onGroupByTagSecondLevelKeyChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.groupbyTagSecondLevelKey = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  render() {\n    const { query, groups } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormWrapper stretch={true}>\n          <InlineFormLabel className={'query-keyword'} width={14} tooltip={'Select your application.'}>\n            Application\n          </InlineFormLabel>\n          <Select\n            menuPlacement={'bottom'}\n            width={12}\n            isSearchable={true}\n            options={call_to_entities}\n            value={query.applicationCallToEntity}\n            onChange={this.onApplicationCallToEntityChange}\n          />\n          <Select\n            menuPlacement={'bottom'}\n            width={0}\n            isSearchable={true}\n            value={query.entity}\n            options={this.state.applications}\n            onChange={this.onApplicationChange}\n          />\n        </FormWrapper>\n\n        <FormWrapper stretch={true}>\n          <InlineFormLabel className={'query-keyword'} width={7} tooltip={'Group by tag.'}>\n            Group by\n          </InlineFormLabel>\n          <Select\n            menuPlacement={'bottom'}\n            width={12}\n            isSearchable={true}\n            value={query.callToEntity}\n            options={call_to_entities}\n            onChange={this.onCallToEntityChange}\n          />\n          <Select\n            menuPlacement={'bottom'}\n            width={0}\n            isSearchable={true}\n            options={groups}\n            value={query.group}\n            onChange={this.onGroupChange}\n          />\n        </FormWrapper>\n\n        <div style={!query.showGroupBySecondLevel ? { display: 'none' } : {}}>\n          <Input\n            css={''}\n            type={'text'}\n            value={query.groupbyTagSecondLevelKey}\n            onChange={this.onGroupByTagSecondLevelKeyChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { InlineFormLabel, Input, PopoverContent } from '@grafana/ui';\nimport FormWrapper from './FormWrapper';\n\ninterface State {}\n\ninterface Props {\n  label: string;\n  value: string;\n  invalid?: boolean;\n  disabled?: boolean;\n  placeholder?: string;\n  queryKeyword?: boolean;\n  labelWidth?: number | 14;\n  inputWidth?: number | 30;\n  tooltip?: PopoverContent;\n\n  onChange(event?: any): any;\n}\n\n/**\n * Default input field including label. Input element is grafana/ui <Input />.\n */\nexport default class FormInput extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    const { label, tooltip, queryKeyword, disabled, labelWidth = 14, inputWidth = 30, ...remainingProps } = this.props;\n\n    return (\n      <FormWrapper disabled={disabled} stretch={!inputWidth}>\n        <InlineFormLabel className={queryKeyword ? 'query-keyword' : ''} width={labelWidth} tooltip={tooltip}>\n          {label}\n        </InlineFormLabel>\n        <Input css={''} width={inputWidth} disabled={disabled} {...remainingProps} />\n      </FormWrapper>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { PLEASE_SPECIFY } from '../../../GlobalVariables';\nimport { DataSource } from '../../../datasources/DataSource';\nimport { InstanaQuery } from '../../../types/instana_query';\nimport { Button, InlineFormLabel } from '@grafana/ui';\nimport FormInput from '../../FormField/FormInput';\nimport { SelectableValue } from '@grafana/data';\n\ninterface MetricFilterState {\n  customFilters: string[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  availableMetrics: SelectableValue[];\n  onFilterChange(customFilters: string[]): void;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n}\n\nexport class MetricFilter extends React.Component<Props, MetricFilterState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      customFilters: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query } = this.props;\n    this.setState({ customFilters: query.customFilters });\n  }\n\n  onFilterChange = (eventItem: ChangeEvent<HTMLInputElement>, index: number) => {\n    const customFilters: string[] = this.state.customFilters;\n    customFilters[index] = eventItem.currentTarget.value;\n    this.setState({ customFilters: customFilters });\n\n    this.props.onFilterChange(customFilters);\n  };\n\n  addCustomFilter = () => {\n    let customFilters = this.state.customFilters;\n    customFilters.push('');\n    this.setState({ customFilters: customFilters });\n\n    const { query, onChange } = this.props;\n    query.customFilters = customFilters;\n    onChange(query);\n  };\n\n  removeCustomFilter = (index: number) => {\n    let customFilters: string[] = this.state.customFilters;\n    customFilters.splice(index, 1);\n    this.setState({ customFilters: customFilters });\n\n    this.props.onFilterChange(customFilters);\n  };\n\n  render() {\n    let filter = null;\n    let listFilter = this.state.customFilters.map((filters, index) => {\n      filter = (\n        <div className={'gf-form'}>\n          <FormInput\n            label={index + 1 + '. filter metric select'}\n            value={this.state.customFilters[index]}\n            placeholder={PLEASE_SPECIFY}\n            onChange={(event) => this.onFilterChange(event, index)}\n            tooltip={'Type to suggest metrics.'}\n          />\n          <Button variant={'secondary'} onClick={() => this.removeCustomFilter(index)}>\n            -\n          </Button>\n        </div>\n      );\n      return filter;\n    });\n\n    return (\n      <div>\n        {listFilter}\n\n        <div className={'gf-form'}>\n          <InlineFormLabel width={14} tooltip={'Add an additional metric select filter.'}>\n            Add filter metric select\n          </InlineFormLabel>\n          <Button variant={'secondary'} onClick={this.addCustomFilter}>\n            +\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { InlineFormLabel, LegacyForms, PopoverContent } from '@grafana/ui';\nimport FormWrapper from './FormWrapper';\n\nconst { Switch } = LegacyForms;\n\ninterface State {}\n\ninterface Props {\n  label: string;\n  value: boolean;\n  disabled?: boolean;\n  queryKeyword?: boolean;\n  labelWidth?: number | 14;\n  tooltip?: PopoverContent;\n\n  onChange(event?: any): any;\n}\n\n/**\n * Default switch field including label. Switch element is grafana/ui <Switch />.\n */\nexport default class FormSwitch extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    const { label, tooltip, queryKeyword, disabled, labelWidth = 14, value, ...remainingProps } = this.props;\n\n    return (\n      <FormWrapper disabled={disabled} stretch={false}>\n        <InlineFormLabel className={queryKeyword ? 'query-keyword' : ''} width={labelWidth} tooltip={tooltip}>\n          {label}\n        </InlineFormLabel>\n        <Switch checked={value} label={''} {...remainingProps} />\n      </FormWrapper>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { InstanaQuery } from '../../../types/instana_query';\nimport FormSwitch from '../../FormField/FormSwitch';\nimport { Input } from '@grafana/ui';\nimport _ from 'lodash';\n\ninterface FreeTextMetricsState {}\n\ninterface Props {\n  query: InstanaQuery;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n  loadEntityTypes(filterResult?: boolean): void;\n}\n\nexport class FreeTextMetrics extends React.Component<Props, FreeTextMetricsState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onUseFreeTextMetricsChange = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    const { query, onChange, loadEntityTypes } = this.props;\n    if (event && event.currentTarget) {\n      query.useFreeTextMetrics = event.currentTarget.checked;\n      if (query.useFreeTextMetrics) {\n        loadEntityTypes(false);\n        query.metric = {};\n      } else {\n        loadEntityTypes(true);\n      }\n      onChange(query);\n    }\n  };\n\n  onFreeTextMetricsChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.freeTextMetrics = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSwitch\n          queryKeyword\n          label={'Enable free text metrics'}\n          tooltip={\n            'Specify comma separated metrics directly in this text field. Once this field has a value,' +\n            ' selected metrics from above will be ignored. Enabled as soon as a query is entered.' +\n            ' Max 4 metrics supported.'\n          }\n          value={query.useFreeTextMetrics}\n          onChange={this.onUseFreeTextMetricsChange}\n          disabled={false}\n        />\n        <Input\n          css={''}\n          width={0}\n          disabled={!query.useFreeTextMetrics}\n          value={query.freeTextMetrics}\n          placeholder={'metric.one,metric.two,metric.three'}\n          onChange={this.onFreeTextMetricsChange}\n        />\n      </div>\n    );\n  }\n}\n","export default [\n  {\n    label: 'SUM',\n  },\n  {\n    label: 'MEAN',\n  },\n  {\n    label: 'MIN',\n  },\n  {\n    label: 'MAX',\n  },\n];\n","import React from 'react';\n\nimport AggregationFunctions from '../../lists/aggregation_function';\nimport { InstanaQuery } from '../../types/instana_query';\nimport FormSwitch from '../FormField/FormSwitch';\nimport { SelectableValue } from '@grafana/data';\nimport { Select } from '@grafana/ui';\n\ninterface AggregateQueryState {}\n\ninterface Props {\n  query: InstanaQuery;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n}\n\nexport class AggregateQuery extends React.Component<Props, AggregateQueryState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { showAdditionalSettings: false, legendFormat: '' };\n    const { query } = this.props;\n    if (!query.aggregationFunction) {\n      query.aggregationFunction = AggregationFunctions[0];\n    }\n  }\n\n  onAggregateGraphs = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    const { query, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.aggregateGraphs = event.currentTarget.checked;\n      onRunQuery();\n    }\n  };\n\n  onHideOriginalGraph = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    const { query, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.hideOriginalGraphs = event.currentTarget.checked;\n      onRunQuery();\n    }\n  };\n\n  onAggregationFunctionChange = (event: SelectableValue) => {\n    const { query, onRunQuery } = this.props;\n    query.aggregationFunction = event;\n    onRunQuery();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSwitch\n          queryKeyword\n          label={'Aggregate query graphs'}\n          tooltip={'Aggregate all graphs of a query.'}\n          value={query.aggregateGraphs}\n          onChange={this.onAggregateGraphs}\n        />\n\n        <Select\n          menuPlacement={'bottom'}\n          width={12}\n          isSearchable={true}\n          options={AggregationFunctions}\n          value={query.aggregationFunction}\n          disabled={!query.aggregateGraphs}\n          onChange={this.onAggregationFunctionChange}\n        />\n\n        <FormSwitch\n          queryKeyword\n          disabled={!query.aggregateGraphs}\n          labelWidth={10}\n          label={'Hide original graphs'}\n          tooltip={'Removes the original graphs resulted from the query and only shows the aggregated graph.'}\n          value={query.hideOriginalGraphs}\n          onChange={this.onHideOriginalGraph}\n        />\n      </div>\n    );\n  }\n}\n","import React, { ChangeEvent, FormEvent } from 'react';\n\nimport { BUILT_IN_METRICS, CUSTOM_METRICS, SLO_INFORMATION } from '../../GlobalVariables';\nimport { FreeTextMetrics } from '../Infrastructure/Custom/FreeTextMetrics';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { AggregateQuery } from './AggregateQuery';\nimport FormSwitch from '../FormField/FormSwitch';\nimport FormInput from '../FormField/FormInput';\nimport _ from 'lodash';\n\nconst legendFormatPlaceholders = [\n  '$label (on host $host)',\n  '$label (on host $host)',\n  '$label ($application) - $key',\n  '$label ($website) - $key',\n  '$label ($application) - $key',\n  '',\n  '',\n  '',\n];\n\nconst legendFormatTooltips = [\n  <div>\n    Default: $label (on host $host)\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $host - corresponding host</li>\n      <li>• $pid - corresponding PID</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $type - entity type</li>\n      <li>• $service - service label</li>\n      <li>• $name - label alternative</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div>\n    Default: $label (on host $host)\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $host - corresponding host</li>\n      <li>• $pid - corresponding PID</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $type - entity type</li>\n      <li>• $service - service label</li>\n      <li>• $name - label alternative</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div>\n    Default: $label ($application) - $key\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $application - application label</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $key - metric key with aggregation and rollup</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div>\n    Default: $label ($website) - $key\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $website - application label</li>\n      <li>• $type - entity type</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $key - metric key with aggregation and rollup</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div>\n    Default: $label ($application) - $key\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $application - application label</li>\n      <li>• $service - service label</li>\n      <li>• $endpoint - endpoint label</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $key - metric key with aggregation and rollup</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  '',\n  '',\n  '',\n];\n\ninterface AdvancedSettingsState {\n  showAdditionalSettings: boolean;\n  legendFormatPlaceholder: string;\n}\n\ninterface Props {\n  query: InstanaQuery;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n  loadEntityTypes(filterResult?: boolean): void;\n}\n\nexport default class AdvancedSettings extends React.Component<Props, AdvancedSettingsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      showAdditionalSettings: false,\n      legendFormatPlaceholder: this.setLegendFormatPlaceholder(),\n    };\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onLegendFormatChange = (eventItem: FormEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.labelFormat = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  onTimeShiftChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.timeShift = eventItem.currentTarget.value;\n\n    if (query.timeShift) {\n      query.timeShiftIsValid = query.timeShift.match(/\\d+[m,s,h,d,w]{1}/) ? true : false;\n    } else {\n      query.timeShiftIsValid = true;\n    }\n\n    onChange(query);\n\n    if (query.timeShiftIsValid) {\n      // onRunQuery with 500ms delay after last debounce\n      this.debouncedRunQuery();\n    }\n  };\n\n  setLegendFormatPlaceholder(): string {\n    const { query } = this.props;\n    return legendFormatPlaceholders[query.metricCategory.key];\n  }\n\n  setLegendFormatTooltip() {\n    const { query } = this.props;\n    return legendFormatTooltips[query.metricCategory.key];\n  }\n\n  render() {\n    const { query, onRunQuery, onChange, loadEntityTypes } = this.props;\n\n    return (\n      <div>\n        <div className={'gf-form'}>\n          <FormSwitch\n            label={'Show advanced settings'}\n            tooltip={'Show all additional settings'}\n            value={this.state.showAdditionalSettings}\n            onChange={() => this.setState({ showAdditionalSettings: !this.state.showAdditionalSettings })}\n          />\n        </div>\n\n        <div hidden={!this.state.showAdditionalSettings}>\n          <div className={'gf-form'} hidden={query.metricCategory.key === SLO_INFORMATION}>\n            <FormInput\n              queryKeyword\n              inputWidth={0}\n              label={'Legend format'}\n              tooltip={this.setLegendFormatTooltip()}\n              value={query.labelFormat}\n              placeholder={this.setLegendFormatPlaceholder()}\n              onChange={(event) => this.onLegendFormatChange(event)}\n            />\n          </div>\n\n          <div className={'gf-form'}>\n            <FormInput\n              queryKeyword\n              inputWidth={0}\n              label={'Time shift'}\n              tooltip={\n                'Specify the amount of hours that shall be used. The time shift function always go back in time, ' +\n                'not forward. Accepts values such as 1s, 1m, 1h, 1d, 1w.'\n              }\n              value={query.timeShift}\n              invalid={!query.timeShiftIsValid}\n              placeholder={'1h'}\n              onChange={(event) => this.onTimeShiftChange(event)}\n            />\n          </div>\n\n          <div hidden={query.metricCategory.key !== CUSTOM_METRICS}>\n            <FreeTextMetrics\n              query={query}\n              onRunQuery={onRunQuery}\n              onChange={onChange}\n              loadEntityTypes={loadEntityTypes}\n            />\n          </div>\n\n          <div hidden={query.metricCategory.key !== BUILT_IN_METRICS && query.metricCategory.key !== CUSTOM_METRICS}>\n            <AggregateQuery query={query} onRunQuery={onRunQuery} onChange={onChange} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { PLEASE_SPECIFY } from '../../GlobalVariables';\nimport FormSelect from '../FormField/FormSelect';\nimport { SelectableValue } from '@grafana/data';\nimport FormInput from '../FormField/FormInput';\nimport _ from 'lodash';\n\ninterface QueryTypeState {}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  queryTypes: SelectableValue[];\n  onRunQuery(): void;\n  loadEntityTypes(filterResult?: boolean): void;\n  onChange(value: InstanaQuery): void;\n  updateMetrics(metrics: SelectableValue[]): void;\n  updateQueryTypes(types: SelectableValue[]): void;\n}\n\nexport class QueryType extends React.Component<Props, QueryTypeState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const { query, loadEntityTypes } = this.props;\n    if (query.entityQuery) {\n      loadEntityTypes();\n    }\n  }\n\n  onQueryChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange, updateQueryTypes } = this.props;\n    if (eventItem.currentTarget && eventItem.currentTarget.value) {\n      query.entityQuery = eventItem.currentTarget.value;\n    } else {\n      updateQueryTypes([]);\n      query.entityQuery = '';\n      query.entityType = { key: null, label: '-' };\n    }\n\n    onChange(query);\n\n    // loadEntityTypes with 500ms delay after last debounce\n    this.debouncedEntityTypes();\n  };\n\n  onTypeChange = (eventItem: SelectableValue) => {\n    const { query, datasource, onChange } = this.props;\n    query.entityType = eventItem;\n    onChange(query);\n\n    datasource.dataSourceInfrastructure\n      .getMetricsCatalog(query.entityType, query.metricCategory.key)\n      .then((results) => {\n        this.props.updateMetrics(results);\n      });\n  };\n\n  debouncedEntityTypes = _.debounce(this.props.loadEntityTypes, 500);\n\n  render() {\n    const { query, queryTypes } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormInput\n          queryKeyword\n          inputWidth={0}\n          label={'Query'}\n          tooltip={\n            <div>\n              Specify a query for the entities you wish to plot. Use the dynamic focus syntax:\n              <a href=\"https://docs.instana.io/core_concepts/dynamic_focus/#syntax\">\n                https://docs.instana.io/core_concepts/dynamic_focus/#syntax\n              </a>\n            </div>\n          }\n          value={query.entityQuery}\n          placeholder={PLEASE_SPECIFY}\n          onChange={this.onQueryChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          label={'Type'}\n          tooltip={'Select an entity type for a list of available metrics.'}\n          noOptionsMessage={'No types found with query'}\n          value={query.entityType}\n          options={queryTypes}\n          onChange={this.onTypeChange}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SelectableValue } from '@grafana/data';\nimport { QueryType } from './QueryType';\n\ninterface InfrastructureBuiltInState {}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  queryTypes: SelectableValue[];\n  onRunQuery(): void;\n  loadEntityTypes(filterResult?: boolean): void;\n  onChange(value: InstanaQuery): void;\n  updateMetrics(metrics: SelectableValue[]): void;\n  updateQueryTypes(types: SelectableValue[]): void;\n}\n\nlet isUnmounting = false;\n\nexport class Infrastructure extends React.Component<Props, InfrastructureBuiltInState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const { query, onChange, datasource } = this.props;\n    isUnmounting = false;\n\n    if (query.entityQuery && query.entityType && query.entityType.key) {\n      datasource.dataSourceInfrastructure\n        .getMetricsCatalog(query.entityType, query.metricCategory.key)\n        .then((results) => {\n          if (!isUnmounting) {\n            this.props.updateMetrics(results);\n          }\n        });\n    } else {\n      query.metric = {\n        key: null,\n        label: '-',\n      };\n    }\n\n    onChange(query);\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  render() {\n    const {\n      query,\n      onRunQuery,\n      onChange,\n      updateMetrics,\n      loadEntityTypes,\n      datasource,\n      queryTypes,\n      updateQueryTypes,\n    } = this.props;\n\n    return (\n      <QueryType\n        query={query}\n        onChange={onChange}\n        queryTypes={queryTypes}\n        onRunQuery={onRunQuery}\n        datasource={datasource}\n        updateMetrics={updateMetrics}\n        loadEntityTypes={loadEntityTypes}\n        updateQueryTypes={updateQueryTypes}\n      />\n    );\n  }\n}\n","export default [\n  {\n    key: 'SLI',\n    label: 'SLI',\n  },\n  {\n    key: 'Remaining Error Budget',\n    label: 'Remaining Error Budget',\n  },\n  {\n    key: 'Timeseries',\n    label: 'Timeseries',\n  },\n];\n","import React, { ChangeEvent } from 'react';\n\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SLO_INFORMATION } from '../../GlobalVariables';\nimport SloSpecifics from '../../lists/slo_specifics';\nimport FormSelect from '../FormField/FormSelect';\nimport { SelectableValue } from '@grafana/data';\nimport FormInput from '../FormField/FormInput';\nimport _ from 'lodash';\n\nconst MAX_VAL = 0.9999;\n\ninterface SloInformationState {\n  sloReports: SelectableValue[];\n  isValidSlo: boolean;\n}\n\ninterface Props {\n  query: InstanaQuery;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n\n  datasource: DataSource;\n}\n\nlet isUnmounting = false;\n\nexport class SloInformation extends React.Component<Props, SloInformationState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      sloReports: [],\n      isValidSlo: true,\n    };\n  }\n\n  componentDidMount() {\n    isUnmounting = false;\n    this.loadSloReports();\n    this.isValid(this.props.query.sloValue);\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onSloChange = (slo: SelectableValue) => {\n    const { query, onRunQuery } = this.props;\n    query.sloReport = slo;\n    onRunQuery();\n  };\n\n  onSloValueChange = (sloValue: ChangeEvent<HTMLInputElement>) => {\n    const { query } = this.props;\n    query.sloValue = sloValue.currentTarget.value;\n\n    if (this.isValid(query.sloValue)) {\n      // onRunQuery with 500ms delay after last debounce\n      this.debouncedRunQuery();\n    }\n  };\n\n  onSloSpecificChange = (sloSpecific: SelectableValue) => {\n    const { query, onRunQuery } = this.props;\n    query.sloSpecific = sloSpecific;\n    onRunQuery();\n  };\n\n  isValid(val: string): boolean {\n    const valid = !val || (+val >= 0 && +val <= MAX_VAL);\n    this.setState({\n      isValidSlo: valid,\n    });\n    return valid;\n  }\n\n  shouldComponentUpdate(\n    nextProps: Readonly<Props>,\n    nextState: Readonly<SloInformationState>,\n    nextContext: any\n  ): boolean {\n    return nextProps.query.metricCategory.key === SLO_INFORMATION;\n  }\n\n  loadSloReports() {\n    const { query } = this.props;\n    this.props.datasource.getSloReports().then((sloReports) => {\n      if (!isUnmounting) {\n        this.setState({ sloReports: sloReports });\n\n        if (!query.sloReport && sloReports.length >= 1) {\n          query.sloReport = sloReports[0];\n        }\n      }\n    });\n  }\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSelect\n          queryKeyword\n          inputWidth={0}\n          label={'Configured SLI'}\n          tooltip={'SLI configuration used to compute error budget and SLI values.'}\n          noOptionsMessage={'No configured SLI found'}\n          value={query.sloReport}\n          options={this.state.sloReports}\n          onChange={this.onSloChange}\n        />\n\n        <FormInput\n          queryKeyword\n          labelWidth={7}\n          inputWidth={0}\n          label={'SLO'}\n          tooltip={'Type in your desired SLO threshold from 0 to ' + MAX_VAL}\n          value={query.sloValue}\n          invalid={!this.state.isValidSlo}\n          placeholder={'0.99'}\n          onChange={this.onSloValueChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={7}\n          inputWidth={0}\n          label={'Value type'}\n          tooltip={\n            <div>\n              Select your specific SLO information:\n              <ul>\n                <li>'SLI' requires Gauge visualization</li>\n                <li>'Remaining Error Budget' requires Singlestat visualization</li>\n                <li>'Timeseries' requires Bars draw mode on Graph visualization</li>\n              </ul>\n            </div>\n          }\n          value={query.sloSpecific}\n          options={SloSpecifics}\n          onChange={this.onSloSpecificChange}\n        />\n      </div>\n    );\n  }\n}\n","export default [\n  { key: 'pageLoad', label: 'Page Loads' },\n  { key: 'pageChange', label: 'Page Transitions' },\n  { key: 'resourceLoad', label: 'Resources' },\n  { key: 'httpRequest', label: 'HTTP Requests' },\n  { key: 'error', label: 'Errors' },\n  { key: 'custom', label: 'Custom Events' },\n];\n","import React, { ChangeEvent } from 'react';\n\nimport { ANALYZE_WEBSITE_METRICS } from '../../GlobalVariables';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport beacon_types from '../../lists/beacon_types';\nimport FormSelect from '../FormField/FormSelect';\nimport { SelectableValue } from '@grafana/data';\nimport { Input } from '@grafana/ui';\nimport _ from 'lodash';\n\ninterface WebsiteMetricsState {\n  websites: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n  groups: SelectableValue[];\n  datasource: DataSource;\n\n  updateGroups(groups: SelectableValue[]): void;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n  updateMetrics(metrics: SelectableValue[]): void;\n  filterMetricsOnType(type: string): any;\n}\n\nlet isUnmounting = false;\n\nexport class WebsiteMetrics extends React.Component<Props, WebsiteMetricsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      websites: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query, datasource, onChange } = this.props;\n    isUnmounting = false;\n    datasource.fetchWebsites().then((websites) => {\n      if (!isUnmounting) {\n        this.setState({\n          websites: websites,\n        });\n\n        // select the most loaded website for default/replacement\n        if ((!query.entity || !query.entity.key) && websites) {\n          query.entity = websites[0];\n        } else if (query.entity && !_.find(websites, ['key', query.entity.key])) {\n          query.entity = websites[0];\n        }\n\n        onChange(query);\n      }\n    });\n\n    datasource.dataSourceWebsite.getWebsiteTags().then((websiteTags: any) => {\n      if (!isUnmounting) {\n        this.props.updateGroups(_.sortBy(websiteTags, 'key'));\n\n        // select a meaningful default group\n        if (!query.group || !query.group.key) {\n          query.group = _.find(websiteTags, ['key', 'beacon.page.name']);\n          onChange(query);\n        }\n      }\n    });\n\n    if (!query.entityType || !query.entityType.key) {\n      query.entityType = beacon_types[0];\n      onChange(query);\n    }\n\n    datasource.dataSourceWebsite.getWebsiteMetricsCatalog().then((websiteMetrics: any) => {\n      if (!isUnmounting) {\n        this.props.updateMetrics(_.filter(websiteMetrics, (m) => m.beaconTypes.includes(query.entityType.key)));\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  onWebsiteChange = (website: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.entity = website;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onBeaconTypeChange = (type: SelectableValue) => {\n    const { query, onChange, filterMetricsOnType } = this.props;\n    query.entityType = type;\n    onChange(query);\n    filterMetricsOnType(query.entityType.key);\n  };\n\n  onGroupChange = (group: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.group = group;\n\n    if (query.group && query.metricCategory.key === ANALYZE_WEBSITE_METRICS) {\n      query.showGroupBySecondLevel = query.group.type === 'KEY_VALUE_PAIR';\n    }\n    if (!query.showGroupBySecondLevel) {\n      query.groupbyTagSecondLevelKey = '';\n    }\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onGroupByTagSecondLevelKeyChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.groupbyTagSecondLevelKey = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  render() {\n    const { query, groups } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSelect\n          queryKeyword\n          inputWidth={0}\n          label={'Website'}\n          tooltip={'Select your website.'}\n          noOptionsMessage={'No websites found'}\n          value={query.entity}\n          options={this.state.websites}\n          onChange={this.onWebsiteChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          label={'Type'}\n          tooltip={'Select a beacon type.'}\n          value={query.entityType}\n          options={beacon_types}\n          onChange={this.onBeaconTypeChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          label={'Group by'}\n          tooltip={'Group by tag.'}\n          value={query.group}\n          options={groups}\n          onChange={this.onGroupChange}\n        />\n\n        <div style={!query.showGroupBySecondLevel ? { display: 'none' } : {}}>\n          <Input css={''} value={query.groupbyTagSecondLevelKey} onChange={this.onGroupByTagSecondLevelKeyChange} />\n        </div>\n      </div>\n    );\n  }\n}\n","export default [\n  { key: 'EQUALS', label: 'equals', type: 'STRING' },\n  { key: 'NOT_EQUAL', label: 'does not equal', type: 'STRING' },\n  { key: 'CONTAINS', label: 'contains', type: 'STRING' },\n  { key: 'NOT_CONTAIN', label: 'does not contain', type: 'STRING' },\n  { key: 'NOT_EMPTY', label: 'is present', type: 'STRING' },\n  { key: 'IS_EMPTY', label: 'is not present', type: 'STRING' },\n\n  { key: 'EQUALS', label: '=', type: 'NUMBER' },\n  { key: 'NOT_EQUAL', label: '!=', type: 'NUMBER' },\n  { key: 'LESS_THAN', label: '<', type: 'NUMBER' },\n  { key: 'GREATER_THAN', label: '>', type: 'NUMBER' },\n  { key: 'IS_EMPTY', label: 'is empty', type: 'NUMBER' },\n\n  { key: 'EQUALS', label: 'is', type: 'BOOLEAN' },\n\n  { key: 'EQUALS', label: 'equals', type: 'KEY_VALUE_PAIR' },\n  { key: 'NOT_EQUAL', label: 'does not equal', type: 'KEY_VALUE_PAIR' },\n  { key: 'CONTAINS', label: 'contains', type: 'KEY_VALUE_PAIR' },\n  { key: 'NOT_CONTAIN', label: 'does not contain', type: 'KEY_VALUE_PAIR' },\n  { key: 'NOT_EMPTY', label: 'is present', type: 'KEY_VALUE_PAIR' },\n  { key: 'IS_EMPTY', label: 'is not present', type: 'KEY_VALUE_PAIR' },\n];\n","import React, { FormEvent } from 'react';\n\nimport { ANALYZE_APPLICATION_METRICS, PLEASE_SPECIFY } from '../../GlobalVariables';\nimport { Button, InlineFormLabel, Input, Select } from '@grafana/ui';\nimport call_to_entities from '../../lists/apply_call_to_entities';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SelectableValue } from '@grafana/data';\nimport TagFilter from '../../types/tag_filter';\nimport operators from '../../lists/operators';\nimport _ from 'lodash';\n\ninterface FilterState {}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  groups: SelectableValue[];\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n}\n\nexport class Filters extends React.Component<Props, FilterState> {\n  OPERATOR_STRING = 'STRING';\n  OPERATOR_NUMBER = 'NUMBER';\n  OPERATOR_BOOLEAN = 'BOOLEAN';\n  OPERATOR_KEY_VALUE = 'KEY_VALUE_PAIR';\n\n  constructor(props: any) {\n    super(props);\n  }\n\n  addTagFilter = () => {\n    const { query, onChange } = this.props;\n    query.filters.push({\n      tag: query.group,\n      entity: call_to_entities[0],\n      operator: this.filterOperatorsOnType(query.group.type)[0],\n      booleanValue: false,\n      numberValue: 0,\n      stringValue: '',\n      isValid: false,\n    });\n\n    onChange(query);\n  };\n\n  removeTagFilter = (index: number) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.filters.splice(index, 1);\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  filterOperatorsOnType(type: any): SelectableValue[] {\n    return _.filter(operators, (o) => o.type === type);\n  }\n\n  onGroupChange(group: SelectableValue, index: number) {\n    const { query } = this.props;\n    query.filters[index].tag = group;\n\n    let ops = this.filterOperatorsOnType(group.type);\n    if (!_.includes(ops, query.filters[index].operator)) {\n      query.filters[index].operator = ops[0];\n    }\n\n    this.validateChangeAndRun(index);\n  }\n\n  onCallToEntityChange = (callToEntity: SelectableValue, index: number) => {\n    const { query } = this.props;\n    query.filters[index].entity = callToEntity;\n\n    this.validateChangeAndRun(index);\n  };\n\n  onOperatorChange = (operator: SelectableValue, index: number) => {\n    const { query } = this.props;\n    query.filters[index].operator = operator;\n\n    this.validateChangeAndRun(index);\n  };\n\n  canShowStringInput(filter: TagFilter) {\n    return (\n      !filter.operator.key.includes('EMPTY') && (filter.tag.type === 'STRING' || filter.tag.type === 'KEY_VALUE_PAIR')\n    );\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onTagFilterStringValueChange = (value: FormEvent<HTMLInputElement>, index: number) => {\n    const { query } = this.props;\n    query.filters[index].stringValue = value.currentTarget.value;\n\n    this.validateChangeAndRun(index, true);\n  };\n\n  onTagFilterNumberValueChange = (value: FormEvent<HTMLInputElement>, index: number) => {\n    const { query } = this.props;\n    query.filters[index].numberValue = value.currentTarget.valueAsNumber;\n\n    this.validateChangeAndRun(index, true);\n  };\n\n  onTagFilterBooleanValueChange(value: SelectableValue, index: number) {\n    const { query } = this.props;\n    query.filters[index].booleanValue = value.key;\n\n    this.validateChangeAndRun(index);\n  }\n\n  validateChangeAndRun(index: number, runDebounced = false) {\n    const { query, onChange, onRunQuery } = this.props;\n    if (query.filters[index].tag) {\n      if (query.filters[index].operator.key.includes('EMPTY')) {\n        query.filters[index].isValid = true;\n        // to avoid sending value with query.filters[index] operators that do not require a value (such as is-present/is-not-present)\n        query.filters[index].stringValue = '';\n        query.filters[index].numberValue = 0;\n        query.filters[index].booleanValue = true;\n      } else if (this.OPERATOR_STRING === query.filters[index].tag.type && query.filters[index].stringValue) {\n        query.filters[index].isValid = true;\n      } else if (\n        this.OPERATOR_KEY_VALUE === query.filters[index].tag.type &&\n        query.filters[index].stringValue &&\n        query.filters[index].stringValue.includes('=')\n      ) {\n        query.filters[index].isValid = true;\n      } else if (this.OPERATOR_NUMBER === query.filters[index].tag.type && query.filters[index].numberValue !== null) {\n        query.filters[index].isValid = true;\n      } else {\n        query.filters[index].isValid =\n          this.OPERATOR_BOOLEAN === query.filters[index].tag.type && query.filters[index].booleanValue;\n      }\n    } else {\n      query.filters[index].isValid = false;\n    }\n\n    onChange(query);\n    if (runDebounced) {\n      // onRunQuery with 500ms delay after last debounce\n      this.debouncedRunQuery();\n    } else {\n      onRunQuery();\n    }\n  }\n\n  render() {\n    const { query, groups } = this.props;\n\n    let listFilter = query.filters.map((singleFilter, index) => {\n      let filter = (\n        <div className={'gf-form'}>\n          <InlineFormLabel className={'query-keyword'} width={14} tooltip={'Filter by tag.'}>\n            {index + 1}. filter\n          </InlineFormLabel>\n          {query.metricCategory.key === ANALYZE_APPLICATION_METRICS && (\n            <Select\n              menuPlacement={'bottom'}\n              width={12}\n              isSearchable={true}\n              options={call_to_entities}\n              value={query.filters[index].entity}\n              onChange={(callToEntity) => this.onCallToEntityChange(callToEntity, index)}\n            />\n          )}\n          <Select\n            menuPlacement={'bottom'}\n            width={30}\n            isSearchable={true}\n            value={query.filters[index].tag}\n            options={groups}\n            onChange={(group) => this.onGroupChange(group, index)}\n          />\n          <Select\n            menuPlacement={'bottom'}\n            width={12}\n            isSearchable={true}\n            value={query.filters[index].operator}\n            options={this.filterOperatorsOnType(query.filters[index].tag.type)}\n            onChange={(operator) => this.onOperatorChange(operator, index)}\n          />\n\n          {this.canShowStringInput(query.filters[index]) && (\n            <Input\n              css={''}\n              width={30}\n              value={query.filters[index].stringValue}\n              placeholder={query.filters[index].tag.type === 'KEY_VALUE_PAIR' ? 'key=value' : PLEASE_SPECIFY}\n              onChange={(event) => this.onTagFilterStringValueChange(event, index)}\n            />\n          )}\n\n          {query.filters[index].tag.type === 'NUMBER' && (\n            <Input\n              css={''}\n              type={'number'}\n              width={30}\n              value={query.filters[index].numberValue}\n              placeholder={PLEASE_SPECIFY}\n              onChange={(event) => this.onTagFilterNumberValueChange(event, index)}\n            />\n          )}\n\n          {query.filters[index].tag.type === 'BOOLEAN' && (\n            <Select\n              menuPlacement={'bottom'}\n              width={30}\n              isSearchable={true}\n              onChange={(e) => this.onTagFilterBooleanValueChange(e, index)}\n              value={{ key: '' + query.filters[index].booleanValue, label: '' + query.filters[index].booleanValue }}\n              options={[\n                { key: 'false', label: 'false' },\n                { key: 'true', label: 'true' },\n              ]}\n            />\n          )}\n\n          <Button variant={'secondary'} onClick={() => this.removeTagFilter(index)}>\n            -\n          </Button>\n        </div>\n      );\n      return filter;\n    });\n\n    return (\n      <div>\n        {listFilter}\n\n        <div className={'gf-form'}>\n          <InlineFormLabel width={14} tooltip={'Add an additional tag filter.'}>\n            Add filter\n          </InlineFormLabel>\n          <Button variant={'secondary'} onClick={this.addTagFilter}>\n            +\n          </Button>\n          <div hidden={!query.showWarningCantShowAllResults}>\n            <InlineFormLabel width={12} tooltip={'Add Filter to narrow down the data.'}>\n              ⚠️ Can't show all results\n            </InlineFormLabel>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { BUILT_IN_METRICS, CUSTOM_METRICS, ANALYZE_APPLICATION_METRICS } from '../../GlobalVariables';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport max_metrics from '../../lists/max_metrics';\nimport FormSelect from '../FormField/FormSelect';\nimport FormSwitch from '../FormField/FormSwitch';\nimport { SelectableValue } from '@grafana/data';\nimport _ from 'lodash';\n\ninterface MetricState {\n  possibleTimeIntervals: SelectableValue[];\n  possibleAggregations: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  availableMetrics: SelectableValue[];\n\n  updateMetrics(metrics: SelectableValue[]): void;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n}\n\nexport default class Metric extends React.Component<Props, MetricState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      possibleTimeIntervals: [],\n      possibleAggregations: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query, datasource } = this.props;\n\n    if (!query.timeInterval || !query.timeInterval.key) {\n      query.timeInterval = datasource.getDefaultTimeInterval(query);\n    }\n  }\n\n  onMetricChange = (metric: SelectableValue) => {\n    const { query, onRunQuery, onChange } = this.props;\n    query.metric = metric;\n\n    if (query.metric && query.metric.key && !_.includes(query.metric.aggregations, query.aggregation)) {\n      query.aggregation = query.metric.aggregations[0];\n    }\n\n    if (query.displayMaxMetricValue && !this.canShowMaxMetricValue()) {\n      query.displayMaxMetricValue = false;\n    }\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  canShowMaxMetricValue() {\n    const { query } = this.props;\n    return (\n      query.entityType &&\n      query.entityType.key === 'host' &&\n      query.metric &&\n      _.find(max_metrics, (m) => m.key === query.metric.key)\n    );\n  }\n\n  onTimeIntervalChange = (timeInterval: SelectableValue) => {\n    const { query, onRunQuery, onChange } = this.props;\n    query.timeInterval = timeInterval;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onAggregationChange = (aggregation: SelectableValue) => {\n    const { query, onRunQuery, onChange } = this.props;\n    query.aggregation = aggregation;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onShowMaxValueChange = (event?: React.SyntheticEvent<HTMLInputElement>) => {\n    const { query, onChange, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.displayMaxMetricValue = event.currentTarget.checked;\n      onChange(query);\n      onRunQuery();\n    }\n  };\n\n  onShowAllMetricsChange = (event?: React.SyntheticEvent<HTMLInputElement>) => {\n    const { query, onChange, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.showAllMetrics = event.currentTarget.checked;\n      if (query.showAllMetrics) {\n        query.metric = {};\n      }\n      onChange(query);\n      onRunQuery();\n    }\n  };\n\n  canShowAggregation() {\n    const { query } = this.props;\n    return query.metricCategory.key >= ANALYZE_APPLICATION_METRICS;\n  }\n\n  canSelectAggregation() {\n    const { query } = this.props;\n    return query.metric && query.metric.aggregations && query.metric.aggregations.length > 1;\n  }\n\n  render() {\n    const { query, datasource } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSelect\n          queryKeyword\n          disabled={query.useFreeTextMetrics}\n          inputWidth={0}\n          label={'Metric'}\n          tooltip={'Select the metric you wish to plot.'}\n          value={query.metric}\n          noOptionsMessage={'No metrics found'}\n          options={this.props.availableMetrics}\n          onChange={this.onMetricChange}\n        />\n\n        {query.metricCategory.key === BUILT_IN_METRICS && (\n          <FormSwitch\n            queryKeyword\n            disabled={!this.canShowMaxMetricValue()}\n            labelWidth={9}\n            label={'Show max value'}\n            tooltip={\n              \"Displays the maximal value of current metric. Supported for 'Type=Host' with cpu.used, \" +\n              'memory.used and openFiles.used only.'\n            }\n            value={query.displayMaxMetricValue}\n            onChange={this.onShowMaxValueChange}\n          />\n        )}\n\n        {query.metricCategory.key === CUSTOM_METRICS && (\n          <FormSwitch\n            queryKeyword\n            disabled={!query.canShowAllMetrics}\n            labelWidth={9}\n            label={'Show all metrics'}\n            tooltip={\n              'You have the option to show all metrics in the graph once the amount of possible, selectable ' +\n              'metrics is between 1 and 5.'\n            }\n            value={query.showAllMetrics}\n            onChange={this.onShowAllMetricsChange}\n          />\n        )}\n\n        {this.canShowAggregation() && (\n          <FormSelect\n            queryKeyword\n            disabled={!this.canSelectAggregation()}\n            labelWidth={6}\n            inputWidth={12}\n            label={'Aggregation'}\n            tooltip={'Select a metric aggregation.'}\n            value={query.aggregation}\n            options={query.metric.aggregations}\n            onChange={this.onAggregationChange}\n          />\n        )}\n\n        <FormSelect\n          queryKeyword\n          disabled={datasource.availableTimeIntervals.length <= 1}\n          labelWidth={6}\n          inputWidth={12}\n          label={'Rollup'}\n          tooltip={'Select the rollup value.'}\n          value={query.timeInterval}\n          options={datasource.availableTimeIntervals}\n          onChange={this.onTimeIntervalChange}\n        />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\n\nimport {\n  ANALYZE_APPLICATION_METRICS,\n  ANALYZE_WEBSITE_METRICS,\n  APPLICATION_SERVICE_ENDPOINT_METRICS,\n  BUILT_IN_METRICS,\n  CUSTOM_METRICS,\n  SLO_INFORMATION,\n} from '../GlobalVariables';\nimport { ApplicationServiceEndpointMetrics } from './ApplicationServiceEndpointMetrics/ApplicationServiceEndpointMetrics';\nimport { ApplicationCallsMetrics } from './Analyze/ApplicationCallsMetrics';\nimport { MetricFilter } from './Infrastructure/Custom/MetricFilter';\nimport AdvancedSettings from './AdvancedSettings/AdvancedSettings';\nimport { QueryEditorProps, SelectableValue } from '@grafana/data';\nimport { Infrastructure } from './Infrastructure/Infrastructure';\nimport { SloInformation } from './SLOInformation/SloInformation';\nimport AggregationFunctions from '../lists/aggregation_function';\nimport { InstanaOptions } from '../types/instana_options';\nimport MetricCategories from '../lists/metric_categories';\nimport { WebsiteMetrics } from './Analyze/WebsiteMetrics';\nimport { DataSource } from '../datasources/DataSource';\nimport { InstanaQuery } from '../types/instana_query';\nimport FormSelect from './FormField/FormSelect';\nimport { Filters } from './Analyze/Filter';\nimport Metric from './Metric/Metric';\nimport migrate from '../migration';\nimport _ from 'lodash';\n\nimport '../instana-grafana.css';\n\ntype Props = QueryEditorProps<DataSource, InstanaQuery, InstanaOptions>;\n\ninterface QueryState {\n  groups: SelectableValue[];\n  queryTypes: SelectableValue[];\n  allMetrics: SelectableValue[];\n  availableMetrics: SelectableValue[];\n}\n\nexport class QueryEditor extends PureComponent<Props, QueryState> {\n  query: InstanaQuery;\n  snapshots: any;\n\n  constructor(props: Props) {\n    super(props);\n    const defaultQuery: Partial<InstanaQuery> = {\n      metricCategory: MetricCategories[0],\n      customFilters: [],\n    };\n\n    this.query = Object.assign(defaultQuery, props.query);\n\n    migrate(this.query);\n\n    this.state = {\n      groups: [],\n      allMetrics: [],\n      queryTypes: [],\n      availableMetrics: [],\n    };\n\n    this.filterMetricsOnType = this.filterMetricsOnType.bind(this);\n    this.loadEntityTypes = this.loadEntityTypes.bind(this);\n\n    this.props.onChange(this.query);\n  }\n\n  onCategoryChange = (newCategory: SelectableValue) => {\n    if (this.query.metricCategory === newCategory) {\n      // nothing needs to be done\n    } else {\n      this.selectionReset();\n      this.query.metricCategory = newCategory;\n      this.query.timeInterval = this.props.datasource.getDefaultTimeInterval(this.query);\n\n      this.changeAndRun();\n    }\n  };\n\n  changeAndRun = () => {\n    this.props.onChange(this.query);\n    this.props.onRunQuery();\n  };\n\n  setMetricPlaceholder(nrOfTotalResults: number) {\n    if (this.query.metricCategory.key === CUSTOM_METRICS) {\n      this.query.metric = {\n        key: null,\n        label: 'Please select (' + nrOfTotalResults + '/' + this.state.allMetrics.length + ')',\n      };\n    } else {\n      this.query.metric = {\n        key: null,\n        label: 'Please select (' + nrOfTotalResults + ')',\n      };\n    }\n\n    this.props.onChange(this.query);\n  }\n\n  updateMetrics = (metrics: SelectableValue[]) => {\n    this.setState({\n      availableMetrics: _.sortBy(metrics, 'key'),\n      allMetrics: _.sortBy(metrics, 'key'),\n    });\n\n    if ((this.query.metric && this.query.metric.key) || this.query.showAllMetrics) {\n      const metric = _.find(metrics, (m) => m.key === this.query.metric.key);\n      metric ? (this.query.metric = metric) : (this.query.metric = { key: null });\n    }\n\n    if (this.query.metricCategory.key === CUSTOM_METRICS) {\n      this.onMetricsFilter(this.query.customFilters); // this contains setMetricPlaceholder\n    } else if (!this.query.metric || !this.query.metric.key) {\n      this.setMetricPlaceholder(metrics.length);\n    }\n\n    this.changeAndRun();\n  };\n\n  loadEntityTypes(filterResult = true) {\n    const { query, datasource, onRunQuery } = this.props;\n\n    if (query.entityQuery) {\n      datasource.fetchTypesForTarget(query).then((response: any) => {\n        this.snapshots = response.data;\n        this.filterForEntityType(true, filterResult);\n        onRunQuery();\n      });\n    } else {\n      this.setState({ queryTypes: [] });\n    }\n  }\n\n  filterForEntityType = (findMatchingEntityTypes = true, filterResults = true) => {\n    const { query, datasource, onChange } = this.props;\n    datasource.getEntityTypes().then((entityTypes) => {\n      let queryTypes = entityTypes;\n      if (filterResults && !query.useFreeTextMetrics) {\n        queryTypes = this.filterEntityTypes(entityTypes, findMatchingEntityTypes);\n      }\n\n      this.setState({ queryTypes: queryTypes });\n\n      if (!query.entityType || !query.entityType.key || !_.find(queryTypes, (m) => m.key === query.entityType.key)) {\n        query.entityType = { key: null, label: 'Please select (' + queryTypes.length + ')' };\n      }\n\n      onChange(query);\n    });\n  };\n\n  filterEntityTypes = (entityTypes: SelectableValue[], findMatchingEntityTypes: boolean) => {\n    if (findMatchingEntityTypes) {\n      return _.sortBy(\n        _.filter(entityTypes, (entityType) => this.findMatchingEntityTypes(entityType)),\n        'label'\n      );\n    }\n\n    return _.sortBy(entityTypes, 'label');\n  };\n\n  findMatchingEntityTypes = (entityType: SelectableValue) => {\n    const { query } = this.props;\n    // workaround as long the api does not support returning plugins with custom metrics only\n    if (\n      query.metricCategory.key === BUILT_IN_METRICS ||\n      entityType.key === 'statsd' ||\n      entityType.key === 'prometheus' ||\n      entityType.key === 'jvmRuntimePlatform' ||\n      entityType.key === 'dropwizardApplicationContainer'\n    ) {\n      return this.snapshots.find((type: any) => type === entityType.key) && entityType.label != null;\n    }\n\n    return false;\n  };\n\n  updateQueryTypes = (types: SelectableValue[]) => {\n    this.setState({\n      queryTypes: types,\n    });\n  };\n\n  updateGroups = (groups: SelectableValue[]) => {\n    this.setState({\n      groups: groups,\n    });\n  };\n\n  onMetricsFilter = (customFilters: string[]) => {\n    let newAvailableMetrics: SelectableValue[] = [];\n    if (!customFilters || customFilters.length === 0) {\n      newAvailableMetrics = this.state.allMetrics;\n    } else {\n      newAvailableMetrics = this.applyFilterToMetricList(customFilters);\n    }\n    this.query.canShowAllMetrics = this.isAbleToShowAllMetrics(newAvailableMetrics);\n    if (!this.query.canShowAllMetrics) {\n      this.query.showAllMetrics = false;\n    }\n    this.query.customFilters = customFilters;\n    if (!this.query.metric || !this.query.metric.key) {\n      this.setMetricPlaceholder(newAvailableMetrics.length);\n    }\n\n    this.setState((state) => ({ ...state, availableMetrics: newAvailableMetrics }));\n\n    this.props.onChange(this.query);\n    this.checkMetricAndRefresh();\n  };\n\n  applyFilterToMetricList(filters: string[]) {\n    let filteredMetrics: any = this.state.allMetrics;\n    _.forEach(filters, (filter) => {\n      if (filter !== '') {\n        filteredMetrics = _.sortBy(\n          _.filter(filteredMetrics, (metric) => metric.key.toLowerCase().includes(filter.toLowerCase())),\n          'key'\n        );\n      }\n    });\n\n    return filteredMetrics;\n  }\n\n  filterMetricsOnType(type: string) {\n    let filteredMetrics: SelectableValue[] = this.state.allMetrics.filter((metric) => {\n      return metric.beaconTypes.includes(type);\n    });\n\n    this.setState({\n      availableMetrics: filteredMetrics,\n    });\n\n    if (!this.query.metric || !this.query.metric.key || !this.query.metric.beaconTypes.includes(type)) {\n      this.setMetricPlaceholder(filteredMetrics.length);\n    }\n\n    this.changeAndRun();\n  }\n\n  isAbleToShowAllMetrics(metrics: SelectableValue[]) {\n    return this.query.metricCategory.key === CUSTOM_METRICS && metrics.length > 0 && metrics.length <= 5;\n  }\n\n  checkMetricAndRefresh() {\n    if (\n      this.query.metric &&\n      this.query.metric.key &&\n      !_.includes(\n        _.map(this.state.availableMetrics, (m) => m.key),\n        this.query.metric.key\n      )\n    ) {\n      this.resetMetricSelection();\n    }\n\n    this.changeAndRun();\n  }\n\n  selectionReset() {\n    const { query } = this.props;\n    if (query.metricCategory.key > CUSTOM_METRICS) {\n      query.entityQuery = '';\n    }\n\n    this.setState({\n      availableMetrics: [],\n      allMetrics: [],\n      groups: [],\n    });\n\n    this.resetEntityTypeSelection();\n    this.resetEntitySelection();\n    this.resetMetricSelection();\n  }\n\n  resetEntityTypeSelection() {\n    const { query } = this.props;\n    query.entityType = {\n      key: null,\n      label: '-',\n    };\n    query.customFilters = [];\n  }\n\n  resetEntitySelection() {\n    const { query } = this.props;\n    query.entity = {};\n    query.group = {};\n    query.showGroupBySecondLevel = false;\n    query.groupbyTagSecondLevelKey = '';\n    query.aggregateGraphs = false;\n    query.aggregationFunction = AggregationFunctions[0];\n    query.hideOriginalGraphs = false;\n    query.filters = [];\n    query.showWarningCantShowAllResults = false;\n    query.showAllMetrics = false;\n    query.canShowAllMetrics = false;\n    query.displayMaxMetricValue = false;\n    query.applicationCallToEntity = {};\n    query.callToEntity = {};\n    this.resetServices();\n    this.resetEndpoints();\n    this.resetSLO();\n  }\n\n  resetMetricSelection() {\n    const { query } = this.props;\n    query.metric = {};\n    query.timeShift = '';\n    query.timeShiftIsValid = true;\n    query.showWarningCantShowAllResults = false;\n    query.showAllMetrics = false;\n    query.labelFormat = '';\n    query.freeTextMetrics = '';\n    query.useFreeTextMetrics = false;\n  }\n\n  resetServices() {\n    this.props.query.service = {};\n  }\n\n  resetEndpoints() {\n    this.props.query.endpoint = {};\n  }\n\n  resetSLO() {\n    const { query } = this.props;\n    query.sloValue = '';\n    query.sloReport = {};\n  }\n\n  render() {\n    const { query, onCategoryChange } = this;\n\n    return (\n      <div className={'gf-form-group'}>\n        <div className={'gf-form'}>\n          <FormSelect\n            queryKeyword\n            inputWidth={0}\n            label={'Category'}\n            tooltip={'Select a metric category.'}\n            value={query.metricCategory}\n            options={MetricCategories}\n            onChange={onCategoryChange}\n          />\n        </div>\n\n        {query.metricCategory.key === BUILT_IN_METRICS && (\n          <Infrastructure\n            query={query}\n            queryTypes={this.state.queryTypes}\n            datasource={this.props.datasource}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            loadEntityTypes={this.loadEntityTypes}\n            updateQueryTypes={this.updateQueryTypes}\n          />\n        )}\n\n        {query.metricCategory.key === CUSTOM_METRICS && (\n          <Infrastructure\n            query={query}\n            queryTypes={this.state.queryTypes}\n            datasource={this.props.datasource}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            loadEntityTypes={this.loadEntityTypes}\n            updateQueryTypes={this.updateQueryTypes}\n          />\n        )}\n\n        {query.metricCategory.key === ANALYZE_APPLICATION_METRICS && (\n          <ApplicationCallsMetrics\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            groups={this.state.groups}\n            updateGroups={this.updateGroups}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === ANALYZE_WEBSITE_METRICS && (\n          <WebsiteMetrics\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            groups={this.state.groups}\n            updateGroups={this.updateGroups}\n            filterMetricsOnType={this.filterMetricsOnType}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === APPLICATION_SERVICE_ENDPOINT_METRICS && (\n          <ApplicationServiceEndpointMetrics\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === SLO_INFORMATION && (\n          <SloInformation\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key !== SLO_INFORMATION && (\n          <Metric\n            query={query}\n            onChange={this.props.onChange}\n            onRunQuery={this.props.onRunQuery}\n            updateMetrics={this.updateMetrics}\n            availableMetrics={this.state.availableMetrics}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === CUSTOM_METRICS && (\n          <MetricFilter\n            query={query}\n            onChange={this.props.onChange}\n            onRunQuery={this.props.onRunQuery}\n            onFilterChange={this.onMetricsFilter}\n            availableMetrics={this.state.availableMetrics}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {(query.metricCategory.key === ANALYZE_APPLICATION_METRICS ||\n          query.metricCategory.key === ANALYZE_WEBSITE_METRICS) && (\n          <Filters\n            query={query}\n            onChange={this.props.onChange}\n            onRunQuery={this.props.onRunQuery}\n            datasource={this.props.datasource}\n            groups={this.state.groups}\n          />\n        )}\n\n        <AdvancedSettings\n          query={query}\n          onRunQuery={this.props.onRunQuery}\n          onChange={this.props.onChange}\n          loadEntityTypes={this.loadEntityTypes}\n        />\n      </div>\n    );\n  }\n}\n","import { InstanaOptions } from './types/instana_options';\nimport { DataSourcePlugin } from '@grafana/data';\nimport { DataSource } from './datasources/DataSource';\nimport { ConfigEditor } from './components/ConfigEditor';\nimport { QueryEditor } from './components/QueryEditor';\nimport { InstanaQuery } from './types/instana_query';\n\nexport const plugin = new DataSourcePlugin<DataSource, InstanaQuery, InstanaOptions>(DataSource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor);\n"],"sourceRoot":""}